

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jan 11 22:48:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F628A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  008C                     	;# 
    90  008E                     	;# 
    91  0092                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009F                     	;# 
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  008C                     	;# 
   127  008E                     	;# 
   128  0092                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009F                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  008C                     	;# 
   164  008E                     	;# 
   165  0092                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009F                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  008C                     	;# 
   201  008E                     	;# 
   202  0092                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009F                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0092                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009F                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  008C                     	;# 
   275  008E                     	;# 
   276  0092                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009F                     	;# 
   284                           
   285                           	psect	idataBANK0
   286  043C                     __pidataBANK0:	
   287                           
   288                           ;initializer for main@F523
   289  043C  3400               	retlw	0
   290  043D  3432               	retlw	50
   291  043E  3416               	retlw	22
   292  043F  3400               	retlw	0
   293  0440  3400               	retlw	0
   294  0441  3400               	retlw	0
   295  0442  3400               	retlw	0
   296  0443  3400               	retlw	0
   297  000F                     _TMR1H	set	15
   298  0017                     _CCP1CON	set	23
   299  0015                     _CCPR1L	set	21
   300  0012                     _T2CON	set	18
   301  0037                     _RB7	set	55
   302  0036                     _RB6	set	54
   303  0033                     _RB3	set	51
   304  002D                     _RA5	set	45
   305  002C                     _RA4	set	44
   306  002B                     _RA3	set	43
   307  0029                     _RA1	set	41
   308  00FA                     _CM2	set	250
   309  00F9                     _CM1	set	249
   310  00F8                     _CM0	set	248
   311  0032                     _RB2	set	50
   312  0031                     _RB1	set	49
   313  0030                     _RB0	set	48
   314  0035                     _RB5	set	53
   315  0034                     _RB4	set	52
   316  002E                     _RA6	set	46
   317  0028                     _RA0	set	40
   318  002F                     _RA7	set	47
   319  002A                     _RA2	set	42
   320  0080                     _TMR1ON	set	128
   321  0082                     _nT1SYNC	set	130
   322  0081                     _TMR1CS	set	129
   323  0083                     _T1OSCEN	set	131
   324  0084                     _T1CKPS0	set	132
   325  0085                     _T1CKPS1	set	133
   326  0086                     _TRISB	set	134
   327  0085                     _TRISA	set	133
   328  008E                     _PCON	set	142
   329  0092                     _PR2	set	146
   330  0437                     _TRISB7	set	1079
   331  0436                     _TRISB6	set	1078
   332  04FB                     _VR3	set	1275
   333  04FA                     _VR2	set	1274
   334  04F9                     _VR1	set	1273
   335  04F8                     _VR0	set	1272
   336  04FD                     _VRR	set	1277
   337  04FE                     _VROE	set	1278
   338  04FF                     _VREN	set	1279
   339  042A                     _TRISA2	set	1066
   340  0429                     _TRISA1	set	1065
   341  042C                     _TRISA4	set	1068
   342  042D                     _TRISA5	set	1069
   343  0473                     _OSCF	set	1139
   344                           
   345                           ; #config settings
   346  0000                     
   347                           	psect	cinit
   348  000B                     start_initialization:	
   349  000B                     __initialization:	
   350                           
   351                           ; Initialize objects allocated to BANK0
   352  000B  243C               	fcall	__pidataBANK0	;fetch initializer
   353  000C  00D1               	movwf	__pdataBANK0& (0+127)
   354  000D  243D               	fcall	__pidataBANK0+1	;fetch initializer
   355  000E  00D2               	movwf	(__pdataBANK0+1)& (0+127)
   356  000F  243E               	fcall	__pidataBANK0+2	;fetch initializer
   357  0010  00D3               	movwf	(__pdataBANK0+2)& (0+127)
   358  0011  243F               	fcall	__pidataBANK0+3	;fetch initializer
   359  0012  00D4               	movwf	(__pdataBANK0+3)& (0+127)
   360  0013  2440               	fcall	__pidataBANK0+4	;fetch initializer
   361  0014  00D5               	movwf	(__pdataBANK0+4)& (0+127)
   362  0015  2441               	fcall	__pidataBANK0+5	;fetch initializer
   363  0016  00D6               	movwf	(__pdataBANK0+5)& (0+127)
   364  0017  2442               	fcall	__pidataBANK0+6	;fetch initializer
   365  0018  00D7               	movwf	(__pdataBANK0+6)& (0+127)
   366  0019  2443               	fcall	__pidataBANK0+7	;fetch initializer
   367  001A  00D8               	movwf	(__pdataBANK0+7)& (0+127)
   368  001B                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  001B                     __end_of__initialization:	
   372  001B  0183               	clrf	3
   373  001C  28D6               	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	dataBANK0
   376  0051                     __pdataBANK0:	
   377  0051                     main@F523:	
   378  0051                     	ds	8
   379                           
   380                           	psect	cstackCOMMON
   381  0070                     __pcstackCOMMON:	
   382  0070                     ?_ConfigureOscillator:	
   383  0070                     ?_InitApp:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_isr:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_isr:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_pwm:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_timer:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_delayOn:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_delayOff:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_main:	
   405                           ; 1 bytes @ 0x0
   406                           
   407                           
   408                           ; 1 bytes @ 0x0
   409  0070                     	ds	2
   410  0072                     ??_ConfigureOscillator:	
   411  0072                     ??_InitApp:	
   412                           ; 1 bytes @ 0x2
   413                           
   414  0072                     ??_pwm:	
   415                           ; 1 bytes @ 0x2
   416                           
   417  0072                     ??_timer:	
   418                           ; 1 bytes @ 0x2
   419                           
   420  0072                     ?_digit:	
   421                           ; 1 bytes @ 0x2
   422                           
   423  0072                     ??_delayOn:	
   424                           ; 1 bytes @ 0x2
   425                           
   426  0072                     ??_delayOff:	
   427                           ; 1 bytes @ 0x2
   428                           
   429  0072                     ?___wmul:	
   430                           ; 1 bytes @ 0x2
   431                           
   432  0072                     ?___awdiv:	
   433                           ; 2 bytes @ 0x2
   434                           
   435  0072                     ?___aldiv:	
   436                           ; 2 bytes @ 0x2
   437                           
   438  0072                     ?_incrementTime:	
   439                           ; 4 bytes @ 0x2
   440                           
   441  0072                     digit@number:	
   442                           ; 8 bytes @ 0x2
   443                           
   444  0072                     ___wmul@multiplier:	
   445                           ; 2 bytes @ 0x2
   446                           
   447  0072                     ___awdiv@divisor:	
   448                           ; 2 bytes @ 0x2
   449                           
   450  0072                     ___aldiv@divisor:	
   451                           ; 2 bytes @ 0x2
   452                           
   453  0072                     incrementTime@time:	
   454                           ; 4 bytes @ 0x2
   455                           
   456                           
   457                           ; 8 bytes @ 0x2
   458  0072                     	ds	2
   459  0074                     ??_digit:	
   460  0074                     ___wmul@multiplicand:	
   461                           ; 1 bytes @ 0x4
   462                           
   463  0074                     ___awdiv@dividend:	
   464                           ; 2 bytes @ 0x4
   465                           
   466                           
   467                           ; 2 bytes @ 0x4
   468  0074                     	ds	2
   469  0076                     ??___wmul:	
   470  0076                     ??___awdiv:	
   471                           ; 1 bytes @ 0x6
   472                           
   473  0076                     ___wmul@product:	
   474                           ; 1 bytes @ 0x6
   475                           
   476  0076                     ___aldiv@dividend:	
   477                           ; 2 bytes @ 0x6
   478                           
   479                           
   480                           ; 4 bytes @ 0x6
   481  0076                     	ds	1
   482  0077                     ___awdiv@counter:	
   483                           
   484                           ; 1 bytes @ 0x7
   485  0077                     	ds	1
   486  0078                     ___awdiv@sign:	
   487                           
   488                           ; 1 bytes @ 0x8
   489  0078                     	ds	1
   490  0079                     ___awdiv@quotient:	
   491                           
   492                           ; 2 bytes @ 0x9
   493  0079                     	ds	1
   494  007A                     ??_incrementTime:	
   495  007A                     ??___aldiv:	
   496                           ; 1 bytes @ 0xA
   497                           
   498                           
   499                           ; 1 bytes @ 0xA
   500  007A                     	ds	1
   501  007B                     ??___almod:	
   502                           
   503                           ; 1 bytes @ 0xB
   504  007B                     	ds	1
   505  007C                     ??_light:	
   506                           
   507                           	psect	cstackBANK0
   508  0020                     __pcstackBANK0:	
   509                           ; 1 bytes @ 0xC
   510                           
   511  0020                     ___aldiv@counter:	
   512                           
   513                           ; 1 bytes @ 0x0
   514  0020                     	ds	1
   515  0021                     ___aldiv@sign:	
   516                           
   517                           ; 1 bytes @ 0x1
   518  0021                     	ds	1
   519  0022                     ___aldiv@quotient:	
   520                           
   521                           ; 4 bytes @ 0x2
   522  0022                     	ds	4
   523  0026                     ?___almod:	
   524  0026                     ___almod@divisor:	
   525                           ; 4 bytes @ 0x6
   526                           
   527                           
   528                           ; 4 bytes @ 0x6
   529  0026                     	ds	4
   530  002A                     ___almod@dividend:	
   531                           
   532                           ; 4 bytes @ 0xA
   533  002A                     	ds	4
   534  002E                     ___almod@counter:	
   535                           
   536                           ; 1 bytes @ 0xE
   537  002E                     	ds	1
   538  002F                     ___almod@sign:	
   539                           
   540                           ; 1 bytes @ 0xF
   541  002F                     	ds	1
   542  0030                     ?_light:	
   543  0030                     light@lamp:	
   544                           ; 1 bytes @ 0x10
   545                           
   546                           
   547                           ; 2 bytes @ 0x10
   548  0030                     	ds	2
   549  0032                     light@number:	
   550                           
   551                           ; 2 bytes @ 0x12
   552  0032                     	ds	2
   553  0034                     ?_showNumber:	
   554  0034                     showNumber@number:	
   555                           ; 1 bytes @ 0x14
   556                           
   557                           
   558                           ; 4 bytes @ 0x14
   559  0034                     	ds	4
   560  0038                     showNumber@time:	
   561                           
   562                           ; 2 bytes @ 0x18
   563  0038                     	ds	2
   564  003A                     ??_showNumber:	
   565                           
   566                           ; 1 bytes @ 0x1A
   567  003A                     	ds	1
   568  003B                     showNumber@i:	
   569                           
   570                           ; 2 bytes @ 0x1B
   571  003B                     	ds	2
   572  003D                     ??_main:	
   573                           
   574                           ; 1 bytes @ 0x1D
   575  003D                     	ds	8
   576  0045                     main@tmr_prev:	
   577                           
   578                           ; 2 bytes @ 0x25
   579  0045                     	ds	2
   580  0047                     main@tmr_now:	
   581                           
   582                           ; 2 bytes @ 0x27
   583  0047                     	ds	2
   584  0049                     main@time:	
   585                           
   586                           ; 8 bytes @ 0x29
   587  0049                     	ds	8
   588                           
   589                           	psect	maintext
   590  00D6                     __pmaintext:	
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 142 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  time            8   41[BANK0 ] struct Time
   601 ;;  tmr_now         2   39[BANK0 ] unsigned int 
   602 ;;  tmr_prev        2   37[BANK0 ] unsigned int 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : B00/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   612 ;;      Params:         0       0       0       0
   613 ;;      Locals:         0      12       0       0
   614 ;;      Temps:          0       8       0       0
   615 ;;      Totals:         0      20       0       0
   616 ;;Total ram usage:       20 bytes
   617 ;; Hardware stack levels required when called:    4
   618 ;; This function calls:
   619 ;;		_ConfigureOscillator
   620 ;;		_InitApp
   621 ;;		___awdiv
   622 ;;		___wmul
   623 ;;		_incrementTime
   624 ;;		_pwm
   625 ;;		_showNumber
   626 ;;		_timer
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _main
   634  00D6                     _main:	
   635  00D6                     l1407:	
   636                           ;incstack = 0
   637                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   638                           
   639                           
   640                           ;main.c: 145:     ConfigureOscillator();
   641  00D6  2450               	fcall	_ConfigureOscillator
   642                           
   643                           ;main.c: 146:     pwm();
   644  00D7  2426               	fcall	_pwm
   645  00D8                     l1409:	
   646                           
   647                           ;main.c: 147:     InitApp();
   648  00D8  23B8               	fcall	_InitApp
   649  00D9                     l1411:	
   650                           
   651                           ;main.c: 148:     timer();
   652  00D9  2433               	fcall	_timer
   653  00DA                     l1413:	
   654                           
   655                           ;main.c: 149:     struct Time time={0,50,22,0,0,0,0};
   656  00DA  3049               	movlw	main@time& (0+255)
   657  00DB  0084               	movwf	4
   658  00DC  3051               	movlw	low main@F523
   659  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   660  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   661  00DF  00BD               	movwf	??_main
   662  00E0  0804               	movf	4,w
   663  00E1  00BE               	movwf	??_main+1
   664  00E2  3008               	movlw	8
   665  00E3  00BF               	movwf	??_main+2
   666  00E4                     u770:	
   667  00E4  083D               	movf	??_main,w
   668  00E5  0084               	movwf	4
   669  00E6  1383               	bcf	3,7	;select IRP bank0
   670  00E7  0800               	movf	0,w
   671  00E8  00C0               	movwf	??_main+3
   672  00E9  0ABD               	incf	??_main,f
   673  00EA  083E               	movf	??_main+1,w
   674  00EB  0084               	movwf	4
   675  00EC  0840               	movf	??_main+3,w
   676  00ED  0080               	movwf	0
   677  00EE  0ABE               	incf	??_main+1,f
   678  00EF  0BBF               	decfsz	??_main+2,f
   679  00F0  28E4               	goto	u770
   680  00F1                     l1415:	
   681                           
   682                           ;main.c: 150:     RB2 = 1;
   683  00F1  1506               	bsf	6,2	;volatile
   684  00F2                     l1417:	
   685                           
   686                           ;main.c: 152:     unsigned int tmr_prev = TMR1H / 16;
   687  00F2  3010               	movlw	16
   688  00F3  00F2               	movwf	___awdiv@divisor
   689  00F4  3000               	movlw	0
   690  00F5  00F3               	movwf	___awdiv@divisor+1
   691  00F6  080F               	movf	15,w	;volatile
   692  00F7  00BD               	movwf	??_main
   693  00F8  01BE               	clrf	??_main+1
   694  00F9  083D               	movf	??_main,w
   695  00FA  00F4               	movwf	___awdiv@dividend
   696  00FB  083E               	movf	??_main+1,w
   697  00FC  00F5               	movwf	___awdiv@dividend+1
   698  00FD  231A               	fcall	___awdiv
   699  00FE  0873               	movf	?___awdiv+1,w
   700  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   701  0100  1303               	bcf	3,6	;RP1=0, select bank0
   702  0101  00C6               	movwf	main@tmr_prev+1
   703  0102  0872               	movf	?___awdiv,w
   704  0103  00C5               	movwf	main@tmr_prev
   705  0104                     l1419:	
   706  0104  3010               	movlw	16
   707  0105  00F2               	movwf	___awdiv@divisor
   708  0106  3000               	movlw	0
   709  0107  00F3               	movwf	___awdiv@divisor+1
   710  0108  080F               	movf	15,w	;volatile
   711  0109  00BD               	movwf	??_main
   712  010A  01BE               	clrf	??_main+1
   713  010B  083D               	movf	??_main,w
   714  010C  00F4               	movwf	___awdiv@dividend
   715  010D  083E               	movf	??_main+1,w
   716  010E  00F5               	movwf	___awdiv@dividend+1
   717  010F  231A               	fcall	___awdiv
   718  0110                     l1421:	
   719                           
   720                           ;main.c: 156:     {;main.c: 157:         tmr_now = TMR1H / 16;
   721  0110  3010               	movlw	16
   722  0111  00F2               	movwf	___awdiv@divisor
   723  0112  3000               	movlw	0
   724  0113  00F3               	movwf	___awdiv@divisor+1
   725  0114  1283               	bcf	3,5	;RP0=0, select bank0
   726  0115  1303               	bcf	3,6	;RP1=0, select bank0
   727  0116  080F               	movf	15,w	;volatile
   728  0117  00BD               	movwf	??_main
   729  0118  01BE               	clrf	??_main+1
   730  0119  083D               	movf	??_main,w
   731  011A  00F4               	movwf	___awdiv@dividend
   732  011B  083E               	movf	??_main+1,w
   733  011C  00F5               	movwf	___awdiv@dividend+1
   734  011D  231A               	fcall	___awdiv
   735  011E  0873               	movf	?___awdiv+1,w
   736  011F  1283               	bcf	3,5	;RP0=0, select bank0
   737  0120  1303               	bcf	3,6	;RP1=0, select bank0
   738  0121  00C8               	movwf	main@tmr_now+1
   739  0122  0872               	movf	?___awdiv,w
   740  0123  00C7               	movwf	main@tmr_now
   741  0124                     l1423:	
   742                           
   743                           ;main.c: 158:         if((tmr_now-tmr_prev) != 0)
   744  0124  0845               	movf	main@tmr_prev,w
   745  0125  0247               	subwf	main@tmr_now,w
   746  0126  00BD               	movwf	??_main
   747  0127  0846               	movf	main@tmr_prev+1,w
   748  0128  1C03               	skipc
   749  0129  0A46               	incf	main@tmr_prev+1,w
   750  012A  0248               	subwf	main@tmr_now+1,w
   751  012B  00BE               	movwf	??_main+1
   752  012C  083D               	movf	??_main,w
   753  012D  043E               	iorwf	??_main+1,w
   754  012E  1903               	btfsc	3,2
   755  012F  2931               	goto	u781
   756  0130  2932               	goto	u780
   757  0131                     u781:	
   758  0131  295F               	goto	l1427
   759  0132                     u780:	
   760  0132                     l1425:	
   761                           
   762                           ;main.c: 159:         {;main.c: 160:             time=incrementTime(time);
   763  0132  3072               	movlw	incrementTime@time& (0+255)
   764  0133  0084               	movwf	4
   765  0134  3049               	movlw	low main@time
   766  0135  00BD               	movwf	??_main
   767  0136  0804               	movf	4,w
   768  0137  00BE               	movwf	??_main+1
   769  0138  3008               	movlw	8
   770  0139  00BF               	movwf	??_main+2
   771  013A                     u790:	
   772  013A  083D               	movf	??_main,w
   773  013B  0084               	movwf	4
   774  013C  1383               	bcf	3,7	;select IRP bank0
   775  013D  0800               	movf	0,w
   776  013E  00C0               	movwf	??_main+3
   777  013F  0ABD               	incf	??_main,f
   778  0140  083E               	movf	??_main+1,w
   779  0141  0084               	movwf	4
   780  0142  0840               	movf	??_main+3,w
   781  0143  0080               	movwf	0
   782  0144  0ABE               	incf	??_main+1,f
   783  0145  0BBF               	decfsz	??_main+2,f
   784  0146  293A               	goto	u790
   785  0147  2408               	fcall	_incrementTime
   786  0148  3049               	movlw	main@time& (0+255)
   787  0149  0084               	movwf	4
   788  014A  3072               	movlw	low ?_incrementTime
   789  014B  1283               	bcf	3,5	;RP0=0, select bank0
   790  014C  1303               	bcf	3,6	;RP1=0, select bank0
   791  014D  00C1               	movwf	??_main+4
   792  014E  0804               	movf	4,w
   793  014F  00C2               	movwf	??_main+5
   794  0150  3008               	movlw	8
   795  0151  00C3               	movwf	??_main+6
   796  0152                     u800:	
   797  0152  0841               	movf	??_main+4,w
   798  0153  0084               	movwf	4
   799  0154  0800               	movf	0,w
   800  0155  00C4               	movwf	??_main+7
   801  0156  0AC1               	incf	??_main+4,f
   802  0157  0842               	movf	??_main+5,w
   803  0158  0084               	movwf	4
   804  0159  1383               	bcf	3,7	;select IRP bank0
   805  015A  0844               	movf	??_main+7,w
   806  015B  0080               	movwf	0
   807  015C  0AC2               	incf	??_main+5,f
   808  015D  0BC3               	decfsz	??_main+6,f
   809  015E  2952               	goto	u800
   810  015F                     l1427:	
   811                           
   812                           ;main.c: 162:         tmr_prev = tmr_now;
   813  015F  0848               	movf	main@tmr_now+1,w
   814  0160  00C6               	movwf	main@tmr_prev+1
   815  0161  0847               	movf	main@tmr_now,w
   816  0162  00C5               	movwf	main@tmr_prev
   817  0163                     l1429:	
   818                           
   819                           ;main.c: 163:         showNumber(100*time.hours+time.minutes,1);
   820  0163  084B               	movf	main@time+2,w
   821  0164  00BD               	movwf	??_main
   822  0165  01BE               	clrf	??_main+1
   823  0166  083D               	movf	??_main,w
   824  0167  00F2               	movwf	___wmul@multiplier
   825  0168  083E               	movf	??_main+1,w
   826  0169  00F3               	movwf	___wmul@multiplier+1
   827  016A  3064               	movlw	100
   828  016B  00F4               	movwf	___wmul@multiplicand
   829  016C  3000               	movlw	0
   830  016D  00F5               	movwf	___wmul@multiplicand+1
   831  016E  23E3               	fcall	___wmul
   832  016F  1283               	bcf	3,5	;RP0=0, select bank0
   833  0170  1303               	bcf	3,6	;RP1=0, select bank0
   834  0171  084A               	movf	main@time+1,w
   835  0172  0772               	addwf	?___wmul,w
   836  0173  00BF               	movwf	??_main+2
   837  0174  3000               	movlw	0
   838  0175  1803               	skipnc
   839  0176  3001               	movlw	1
   840  0177  0773               	addwf	?___wmul+1,w
   841  0178  00C0               	movwf	??_main+3
   842  0179  083F               	movf	??_main+2,w
   843  017A  00B4               	movwf	showNumber@number
   844  017B  0840               	movf	??_main+3,w
   845  017C  00B5               	movwf	showNumber@number+1
   846  017D  3000               	movlw	0
   847  017E  1BB5               	btfsc	showNumber@number+1,7
   848  017F  30FF               	movlw	255
   849  0180  00B6               	movwf	showNumber@number+2
   850  0181  00B7               	movwf	showNumber@number+3
   851  0182  3001               	movlw	1
   852  0183  00B8               	movwf	showNumber@time
   853  0184  3000               	movlw	0
   854  0185  00B9               	movwf	showNumber@time+1
   855  0186  201D               	fcall	_showNumber
   856  0187  2910               	goto	l1421
   857  0188  280A               	ljmp	start
   858  0189                     __end_of_main:	
   859                           
   860                           	psect	text1
   861  0433                     __ptext1:	
   862 ;; *************** function _timer *****************
   863 ;; Defined at:
   864 ;;		line 42 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		None
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   878 ;;      Params:         0       0       0       0
   879 ;;      Locals:         0       0       0       0
   880 ;;      Temps:          0       0       0       0
   881 ;;      Totals:         0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _timer
   894  0433                     _timer:	
   895  0433                     l1247:	
   896                           ;incstack = 0
   897                           ; Regs used in _timer: []
   898                           
   899                           
   900                           ;main.c: 44:     T1CKPS1=1;
   901  0433  1283               	bcf	3,5	;RP0=0, select bank0
   902  0434  1303               	bcf	3,6	;RP1=0, select bank0
   903  0435  1690               	bsf	16,5	;volatile
   904                           
   905                           ;main.c: 45:     T1CKPS0=1;
   906  0436  1610               	bsf	16,4	;volatile
   907                           
   908                           ;main.c: 46:     T1OSCEN=1;
   909  0437  1590               	bsf	16,3	;volatile
   910                           
   911                           ;main.c: 47:     TMR1CS=1;
   912  0438  1490               	bsf	16,1	;volatile
   913                           
   914                           ;main.c: 48:     nT1SYNC=1;
   915  0439  1510               	bsf	16,2	;volatile
   916                           
   917                           ;main.c: 49:     TMR1ON =1;
   918  043A  1410               	bsf	16,0	;volatile
   919  043B                     l57:	
   920  043B  0008               	return
   921  043C                     __end_of_timer:	
   922                           
   923                           	psect	text2
   924  001D                     __ptext2:	
   925 ;; *************** function _showNumber *****************
   926 ;; Defined at:
   927 ;;		line 91 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  number          4   20[BANK0 ] long 
   930 ;;  time            2   24[BANK0 ] int 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  i               2   27[BANK0 ] int 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   942 ;;      Params:         0       6       0       0
   943 ;;      Locals:         0       2       0       0
   944 ;;      Temps:          0       1       0       0
   945 ;;      Totals:         0       9       0       0
   946 ;;Total ram usage:        9 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    3
   949 ;; This function calls:
   950 ;;		___aldiv
   951 ;;		___almod
   952 ;;		_light
   953 ;; This function is called by:
   954 ;;		_main
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           
   959                           ;psect for function _showNumber
   960  001D                     _showNumber:	
   961  001D                     l1249:	
   962                           ;incstack = 0
   963                           ; Regs used in _showNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   964                           
   965                           
   966                           ;main.c: 91: void showNumber(long number, int time);main.c: 92: {;main.c: 93:     for(in
      +                          t i=0; i < time; i++)
   967  001D  1283               	bcf	3,5	;RP0=0, select bank0
   968  001E  1303               	bcf	3,6	;RP1=0, select bank0
   969  001F  01BB               	clrf	showNumber@i
   970  0020  01BC               	clrf	showNumber@i+1
   971  0021  28C7               	goto	l1255
   972  0022                     l1251:	
   973                           
   974                           ;main.c: 94:     {;main.c: 95:         light(3, number/1000);
   975  0022  3003               	movlw	3
   976  0023  1283               	bcf	3,5	;RP0=0, select bank0
   977  0024  1303               	bcf	3,6	;RP1=0, select bank0
   978  0025  00B0               	movwf	light@lamp
   979  0026  3000               	movlw	0
   980  0027  00B1               	movwf	light@lamp+1
   981  0028  3000               	movlw	0
   982  0029  00F5               	movwf	___aldiv@divisor+3
   983  002A  3000               	movlw	0
   984  002B  00F4               	movwf	___aldiv@divisor+2
   985  002C  3003               	movlw	3
   986  002D  00F3               	movwf	___aldiv@divisor+1
   987  002E  30E8               	movlw	232
   988  002F  00F2               	movwf	___aldiv@divisor
   989  0030  0837               	movf	showNumber@number+3,w
   990  0031  00F9               	movwf	___aldiv@dividend+3
   991  0032  0836               	movf	showNumber@number+2,w
   992  0033  00F8               	movwf	___aldiv@dividend+2
   993  0034  0835               	movf	showNumber@number+1,w
   994  0035  00F7               	movwf	___aldiv@dividend+1
   995  0036  0834               	movf	showNumber@number,w
   996  0037  00F6               	movwf	___aldiv@dividend
   997  0038  2189               	fcall	___aldiv
   998  0039  0873               	movf	?___aldiv+1,w
   999  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1000  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1001  003C  00B3               	movwf	light@number+1
  1002  003D  0872               	movf	?___aldiv,w
  1003  003E  00B2               	movwf	light@number
  1004  003F  2381               	fcall	_light
  1005                           
  1006                           ;main.c: 96:         light(2, number/100%10);
  1007  0040  3002               	movlw	2
  1008  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0043  00B0               	movwf	light@lamp
  1011  0044  3000               	movlw	0
  1012  0045  00B1               	movwf	light@lamp+1
  1013  0046  3000               	movlw	0
  1014  0047  00A9               	movwf	___almod@divisor+3
  1015  0048  3000               	movlw	0
  1016  0049  00A8               	movwf	___almod@divisor+2
  1017  004A  3000               	movlw	0
  1018  004B  00A7               	movwf	___almod@divisor+1
  1019  004C  300A               	movlw	10
  1020  004D  00A6               	movwf	___almod@divisor
  1021  004E  3000               	movlw	0
  1022  004F  00F5               	movwf	___aldiv@divisor+3
  1023  0050  3000               	movlw	0
  1024  0051  00F4               	movwf	___aldiv@divisor+2
  1025  0052  3000               	movlw	0
  1026  0053  00F3               	movwf	___aldiv@divisor+1
  1027  0054  3064               	movlw	100
  1028  0055  00F2               	movwf	___aldiv@divisor
  1029  0056  0837               	movf	showNumber@number+3,w
  1030  0057  00F9               	movwf	___aldiv@dividend+3
  1031  0058  0836               	movf	showNumber@number+2,w
  1032  0059  00F8               	movwf	___aldiv@dividend+2
  1033  005A  0835               	movf	showNumber@number+1,w
  1034  005B  00F7               	movwf	___aldiv@dividend+1
  1035  005C  0834               	movf	showNumber@number,w
  1036  005D  00F6               	movwf	___aldiv@dividend
  1037  005E  2189               	fcall	___aldiv
  1038  005F  0875               	movf	?___aldiv+3,w
  1039  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0062  00AD               	movwf	___almod@dividend+3
  1042  0063  0874               	movf	?___aldiv+2,w
  1043  0064  00AC               	movwf	___almod@dividend+2
  1044  0065  0873               	movf	?___aldiv+1,w
  1045  0066  00AB               	movwf	___almod@dividend+1
  1046  0067  0872               	movf	?___aldiv,w
  1047  0068  00AA               	movwf	___almod@dividend
  1048  0069  2226               	fcall	___almod
  1049  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1050  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1051  006C  0827               	movf	?___almod+1,w
  1052  006D  00B3               	movwf	light@number+1
  1053  006E  0826               	movf	?___almod,w
  1054  006F  00B2               	movwf	light@number
  1055  0070  2381               	fcall	_light
  1056                           
  1057                           ;main.c: 97:         light(1, number/10%10);
  1058  0071  3001               	movlw	1
  1059  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0074  00B0               	movwf	light@lamp
  1062  0075  3000               	movlw	0
  1063  0076  00B1               	movwf	light@lamp+1
  1064  0077  3000               	movlw	0
  1065  0078  00A9               	movwf	___almod@divisor+3
  1066  0079  3000               	movlw	0
  1067  007A  00A8               	movwf	___almod@divisor+2
  1068  007B  3000               	movlw	0
  1069  007C  00A7               	movwf	___almod@divisor+1
  1070  007D  300A               	movlw	10
  1071  007E  00A6               	movwf	___almod@divisor
  1072  007F  3000               	movlw	0
  1073  0080  00F5               	movwf	___aldiv@divisor+3
  1074  0081  3000               	movlw	0
  1075  0082  00F4               	movwf	___aldiv@divisor+2
  1076  0083  3000               	movlw	0
  1077  0084  00F3               	movwf	___aldiv@divisor+1
  1078  0085  300A               	movlw	10
  1079  0086  00F2               	movwf	___aldiv@divisor
  1080  0087  0837               	movf	showNumber@number+3,w
  1081  0088  00F9               	movwf	___aldiv@dividend+3
  1082  0089  0836               	movf	showNumber@number+2,w
  1083  008A  00F8               	movwf	___aldiv@dividend+2
  1084  008B  0835               	movf	showNumber@number+1,w
  1085  008C  00F7               	movwf	___aldiv@dividend+1
  1086  008D  0834               	movf	showNumber@number,w
  1087  008E  00F6               	movwf	___aldiv@dividend
  1088  008F  2189               	fcall	___aldiv
  1089  0090  0875               	movf	?___aldiv+3,w
  1090  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0093  00AD               	movwf	___almod@dividend+3
  1093  0094  0874               	movf	?___aldiv+2,w
  1094  0095  00AC               	movwf	___almod@dividend+2
  1095  0096  0873               	movf	?___aldiv+1,w
  1096  0097  00AB               	movwf	___almod@dividend+1
  1097  0098  0872               	movf	?___aldiv,w
  1098  0099  00AA               	movwf	___almod@dividend
  1099  009A  2226               	fcall	___almod
  1100  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1101  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1102  009D  0827               	movf	?___almod+1,w
  1103  009E  00B3               	movwf	light@number+1
  1104  009F  0826               	movf	?___almod,w
  1105  00A0  00B2               	movwf	light@number
  1106  00A1  2381               	fcall	_light
  1107                           
  1108                           ;main.c: 98:         light(0, number%10);
  1109  00A2  3000               	movlw	0
  1110  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00A5  00B0               	movwf	light@lamp
  1113  00A6  00B1               	movwf	light@lamp+1
  1114  00A7  3000               	movlw	0
  1115  00A8  00A9               	movwf	___almod@divisor+3
  1116  00A9  3000               	movlw	0
  1117  00AA  00A8               	movwf	___almod@divisor+2
  1118  00AB  3000               	movlw	0
  1119  00AC  00A7               	movwf	___almod@divisor+1
  1120  00AD  300A               	movlw	10
  1121  00AE  00A6               	movwf	___almod@divisor
  1122  00AF  0837               	movf	showNumber@number+3,w
  1123  00B0  00AD               	movwf	___almod@dividend+3
  1124  00B1  0836               	movf	showNumber@number+2,w
  1125  00B2  00AC               	movwf	___almod@dividend+2
  1126  00B3  0835               	movf	showNumber@number+1,w
  1127  00B4  00AB               	movwf	___almod@dividend+1
  1128  00B5  0834               	movf	showNumber@number,w
  1129  00B6  00AA               	movwf	___almod@dividend
  1130  00B7  2226               	fcall	___almod
  1131  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1132  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1133  00BA  0827               	movf	?___almod+1,w
  1134  00BB  00B3               	movwf	light@number+1
  1135  00BC  0826               	movf	?___almod,w
  1136  00BD  00B2               	movwf	light@number
  1137  00BE  2381               	fcall	_light
  1138  00BF                     l1253:	
  1139                           
  1140                           ;main.c: 99:     }
  1141  00BF  3001               	movlw	1
  1142  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1143  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1144  00C2  07BB               	addwf	showNumber@i,f
  1145  00C3  1803               	skipnc
  1146  00C4  0ABC               	incf	showNumber@i+1,f
  1147  00C5  3000               	movlw	0
  1148  00C6  07BC               	addwf	showNumber@i+1,f
  1149  00C7                     l1255:	
  1150  00C7  083C               	movf	showNumber@i+1,w
  1151  00C8  3A80               	xorlw	128
  1152  00C9  00BA               	movwf	??_showNumber
  1153  00CA  0839               	movf	showNumber@time+1,w
  1154  00CB  3A80               	xorlw	128
  1155  00CC  023A               	subwf	??_showNumber,w
  1156  00CD  1D03               	skipz
  1157  00CE  28D1               	goto	u605
  1158  00CF  0838               	movf	showNumber@time,w
  1159  00D0  023B               	subwf	showNumber@i,w
  1160  00D1                     u605:	
  1161  00D1  1C03               	skipc
  1162  00D2  28D4               	goto	u601
  1163  00D3  28D5               	goto	u600
  1164  00D4                     u601:	
  1165  00D4  2822               	goto	l1251
  1166  00D5                     u600:	
  1167  00D5                     l93:	
  1168  00D5  0008               	return
  1169  00D6                     __end_of_showNumber:	
  1170                           
  1171                           	psect	text3
  1172  0381                     __ptext3:	
  1173 ;; *************** function _light *****************
  1174 ;; Defined at:
  1175 ;;		line 79 in file "main.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  lamp            2   16[BANK0 ] int 
  1178 ;;  number          2   18[BANK0 ] int 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1190 ;;      Params:         0       4       0       0
  1191 ;;      Locals:         0       0       0       0
  1192 ;;      Temps:          0       0       0       0
  1193 ;;      Totals:         0       4       0       0
  1194 ;;Total ram usage:        4 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		_delayOff
  1199 ;;		_delayOn
  1200 ;;		_digit
  1201 ;; This function is called by:
  1202 ;;		_showNumber
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _light
  1208  0381                     _light:	
  1209  0381                     l1139:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _light: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1212                           
  1213                           
  1214                           ;main.c: 79: void light(int lamp, int number);main.c: 80: {;main.c: 81:     digit(number
      +                          );
  1215  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0383  0833               	movf	light@number+1,w
  1218  0384  00F3               	movwf	digit@number+1
  1219  0385  0832               	movf	light@number,w
  1220  0386  00F2               	movwf	digit@number
  1221  0387  22AD               	fcall	_digit
  1222                           
  1223                           ;main.c: 82:     switch(lamp)
  1224  0388  2BA2               	goto	l1167
  1225  0389                     l82:	
  1226                           ;main.c: 83:     {;main.c: 84:         case 0: RB4 = 1; delayOn(); RB4 = 0; delayOff(); 
      +                          break;
  1227                           
  1228  0389  1606               	bsf	6,4	;volatile
  1229  038A                     l1141:	
  1230  038A  2455               	fcall	_delayOn
  1231  038B                     l1143:	
  1232  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1233  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1234  038D  1206               	bcf	6,4	;volatile
  1235  038E                     l1145:	
  1236  038E  244B               	fcall	_delayOff
  1237  038F  2BB7               	goto	l87
  1238  0390                     l84:	
  1239                           ;main.c: 85:         case 1: RB5 = 1; delayOn(); RB5 = 0; delayOff(); break;
  1240                           
  1241  0390  1686               	bsf	6,5	;volatile
  1242  0391                     l1147:	
  1243  0391  2455               	fcall	_delayOn
  1244  0392                     l1149:	
  1245  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0394  1286               	bcf	6,5	;volatile
  1248  0395  2B8E               	goto	l1145
  1249  0396                     l85:	
  1250                           ;main.c: 86:         case 2: RB0 = 1; delayOn(); RB0 = 0; delayOff(); break;
  1251                           
  1252  0396  1406               	bsf	6,0	;volatile
  1253  0397                     l1153:	
  1254  0397  2455               	fcall	_delayOn
  1255  0398                     l1155:	
  1256  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1258  039A  1006               	bcf	6,0	;volatile
  1259  039B  2B8E               	goto	l1145
  1260  039C                     l86:	
  1261                           ;main.c: 87:         case 3: RB1 = 1; delayOn(); RB1 = 0; delayOff(); break;
  1262                           
  1263  039C  1486               	bsf	6,1	;volatile
  1264  039D                     l1159:	
  1265  039D  2455               	fcall	_delayOn
  1266  039E                     l1161:	
  1267  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1268  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1269  03A0  1086               	bcf	6,1	;volatile
  1270  03A1  2B8E               	goto	l1145
  1271  03A2                     l1167:	
  1272                           
  1273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1274                           ; Switch size 1, requested type "simple"
  1275                           ; Number of cases is 1, Range of values is 0 to 0
  1276                           ; switch strategies available:
  1277                           ; Name         Instructions Cycles
  1278                           ; simple_byte            4     3 (average)
  1279                           ; direct_byte            7     6 (fixed)
  1280                           ; jumptable            260     6 (fixed)
  1281                           ;	Chosen strategy is simple_byte
  1282  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1283  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1284  03A4  0831               	movf	light@lamp+1,w
  1285  03A5  3A00               	xorlw	0	; case 0
  1286  03A6  1903               	skipnz
  1287  03A7  2BA9               	goto	l1471
  1288  03A8  2BB7               	goto	l87
  1289  03A9                     l1471:	
  1290                           
  1291                           ; Switch size 1, requested type "simple"
  1292                           ; Number of cases is 4, Range of values is 0 to 3
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; direct_byte           10     6 (fixed)
  1296                           ; simple_byte           13     7 (average)
  1297                           ; jumptable            260     6 (fixed)
  1298                           ;	Chosen strategy is simple_byte
  1299  03A9  0830               	movf	light@lamp,w
  1300  03AA  3A00               	xorlw	0	; case 0
  1301  03AB  1903               	skipnz
  1302  03AC  2B89               	goto	l82
  1303  03AD  3A01               	xorlw	1	; case 1
  1304  03AE  1903               	skipnz
  1305  03AF  2B90               	goto	l84
  1306  03B0  3A03               	xorlw	3	; case 2
  1307  03B1  1903               	skipnz
  1308  03B2  2B96               	goto	l85
  1309  03B3  3A01               	xorlw	1	; case 3
  1310  03B4  1903               	skipnz
  1311  03B5  2B9C               	goto	l86
  1312  03B6  2BB7               	goto	l87
  1313  03B7                     l87:	
  1314  03B7  0008               	return
  1315  03B8                     __end_of_light:	
  1316                           
  1317                           	psect	text4
  1318  02AD                     __ptext4:	
  1319 ;; *************** function _digit *****************
  1320 ;; Defined at:
  1321 ;;		line 53 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  number          2    2[COMMON] int 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1335 ;;      Params:         2       0       0       0
  1336 ;;      Locals:         0       0       0       0
  1337 ;;      Temps:          0       0       0       0
  1338 ;;      Totals:         2       0       0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_light
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _digit
  1351  02AD                     _digit:	
  1352  02AD                     l1127:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _digit: [wreg-fsr0h+status,2+status,0]
  1355                           
  1356                           
  1357                           ;main.c: 53: void digit(int number);main.c: 54: {;main.c: 55:     switch(number){
  1358  02AD  2AF4               	goto	l1131
  1359  02AE                     l61:	
  1360                           ;main.c: 56:         case 1: RA2=0; RA7=0; RA0=0; RA6=0; break;
  1361                           
  1362  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1363  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1364  02B0  1105               	bcf	5,2	;volatile
  1365  02B1  1385               	bcf	5,7	;volatile
  1366  02B2  1005               	bcf	5,0	;volatile
  1367  02B3  1305               	bcf	5,6	;volatile
  1368  02B4  2B19               	goto	l72
  1369  02B5                     l63:	
  1370                           ;main.c: 57:         case 6: RA2=1; RA7=0; RA0=0; RA6=0; break;
  1371                           
  1372  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1373  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1374  02B7  1505               	bsf	5,2	;volatile
  1375  02B8  1385               	bcf	5,7	;volatile
  1376  02B9  1005               	bcf	5,0	;volatile
  1377  02BA  1305               	bcf	5,6	;volatile
  1378  02BB  2B19               	goto	l72
  1379  02BC                     l64:	
  1380                           ;main.c: 58:         case 9: RA2=0; RA7=1; RA0=0; RA6=0; break;
  1381                           
  1382  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1383  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1384  02BE  1105               	bcf	5,2	;volatile
  1385  02BF  1785               	bsf	5,7	;volatile
  1386  02C0  1005               	bcf	5,0	;volatile
  1387  02C1  1305               	bcf	5,6	;volatile
  1388  02C2  2B19               	goto	l72
  1389  02C3                     l65:	
  1390                           ;main.c: 59:         case 3: RA2=1; RA7=1; RA0=0; RA6=0; break;
  1391                           
  1392  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1393  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1394  02C5  1505               	bsf	5,2	;volatile
  1395  02C6  1785               	bsf	5,7	;volatile
  1396  02C7  1005               	bcf	5,0	;volatile
  1397  02C8  1305               	bcf	5,6	;volatile
  1398  02C9  2B19               	goto	l72
  1399  02CA                     l66:	
  1400                           ;main.c: 60:         case 7: RA2=0; RA7=0; RA0=1; RA6=0; break;
  1401                           
  1402  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1403  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1404  02CC  1105               	bcf	5,2	;volatile
  1405  02CD  1385               	bcf	5,7	;volatile
  1406  02CE  1405               	bsf	5,0	;volatile
  1407  02CF  1305               	bcf	5,6	;volatile
  1408  02D0  2B19               	goto	l72
  1409  02D1                     l67:	
  1410                           ;main.c: 61:         case 5: RA2=1; RA7=0; RA0=1; RA6=0; break;
  1411                           
  1412  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1413  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1414  02D3  1505               	bsf	5,2	;volatile
  1415  02D4  1385               	bcf	5,7	;volatile
  1416  02D5  1405               	bsf	5,0	;volatile
  1417  02D6  1305               	bcf	5,6	;volatile
  1418  02D7  2B19               	goto	l72
  1419  02D8                     l68:	
  1420                           ;main.c: 62:         case 4: RA2=0; RA7=1; RA0=1; RA6=0; break;
  1421                           
  1422  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1423  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1424  02DA  1105               	bcf	5,2	;volatile
  1425  02DB  1785               	bsf	5,7	;volatile
  1426  02DC  1405               	bsf	5,0	;volatile
  1427  02DD  1305               	bcf	5,6	;volatile
  1428  02DE  2B19               	goto	l72
  1429  02DF                     l69:	
  1430                           ;main.c: 63:         case 8: RA2=1; RA7=1; RA0=1; RA6=0; break;
  1431                           
  1432  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1433  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1434  02E1  1505               	bsf	5,2	;volatile
  1435  02E2  1785               	bsf	5,7	;volatile
  1436  02E3  1405               	bsf	5,0	;volatile
  1437  02E4  1305               	bcf	5,6	;volatile
  1438  02E5  2B19               	goto	l72
  1439  02E6                     l70:	
  1440                           ;main.c: 64:         case 2: RA2=0; RA7=0; RA0=0; RA6=1; break;
  1441                           
  1442  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1443  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1444  02E8  1105               	bcf	5,2	;volatile
  1445  02E9  1385               	bcf	5,7	;volatile
  1446  02EA  1005               	bcf	5,0	;volatile
  1447  02EB  1705               	bsf	5,6	;volatile
  1448  02EC  2B19               	goto	l72
  1449  02ED                     l71:	
  1450                           ;main.c: 65:         case 0: RA2=1; RA7=0; RA0=0; RA6=1; break;
  1451                           
  1452  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1453  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1454  02EF  1505               	bsf	5,2	;volatile
  1455  02F0  1385               	bcf	5,7	;volatile
  1456  02F1  1005               	bcf	5,0	;volatile
  1457  02F2  1705               	bsf	5,6	;volatile
  1458  02F3  2B19               	goto	l72
  1459  02F4                     l1131:	
  1460                           
  1461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 1, Range of values is 0 to 0
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte            4     3 (average)
  1467                           ; direct_byte            7     6 (fixed)
  1468                           ; jumptable            260     6 (fixed)
  1469                           ;	Chosen strategy is simple_byte
  1470  02F4  0873               	movf	digit@number+1,w
  1471  02F5  3A00               	xorlw	0	; case 0
  1472  02F6  1903               	skipnz
  1473  02F7  2AF9               	goto	l1473
  1474  02F8  2B19               	goto	l72
  1475  02F9                     l1473:	
  1476                           
  1477                           ; Switch size 1, requested type "simple"
  1478                           ; Number of cases is 10, Range of values is 0 to 9
  1479                           ; switch strategies available:
  1480                           ; Name         Instructions Cycles
  1481                           ; direct_byte           16     6 (fixed)
  1482                           ; simple_byte           31    16 (average)
  1483                           ; jumptable            260     6 (fixed)
  1484                           ;	Chosen strategy is simple_byte
  1485  02F9  0872               	movf	digit@number,w
  1486  02FA  3A00               	xorlw	0	; case 0
  1487  02FB  1903               	skipnz
  1488  02FC  2AED               	goto	l71
  1489  02FD  3A01               	xorlw	1	; case 1
  1490  02FE  1903               	skipnz
  1491  02FF  2AAE               	goto	l61
  1492  0300  3A03               	xorlw	3	; case 2
  1493  0301  1903               	skipnz
  1494  0302  2AE6               	goto	l70
  1495  0303  3A01               	xorlw	1	; case 3
  1496  0304  1903               	skipnz
  1497  0305  2AC3               	goto	l65
  1498  0306  3A07               	xorlw	7	; case 4
  1499  0307  1903               	skipnz
  1500  0308  2AD8               	goto	l68
  1501  0309  3A01               	xorlw	1	; case 5
  1502  030A  1903               	skipnz
  1503  030B  2AD1               	goto	l67
  1504  030C  3A03               	xorlw	3	; case 6
  1505  030D  1903               	skipnz
  1506  030E  2AB5               	goto	l63
  1507  030F  3A01               	xorlw	1	; case 7
  1508  0310  1903               	skipnz
  1509  0311  2ACA               	goto	l66
  1510  0312  3A0F               	xorlw	15	; case 8
  1511  0313  1903               	skipnz
  1512  0314  2ADF               	goto	l69
  1513  0315  3A01               	xorlw	1	; case 9
  1514  0316  1903               	skipnz
  1515  0317  2ABC               	goto	l64
  1516  0318  2B19               	goto	l72
  1517  0319                     l72:	
  1518  0319  0008               	return
  1519  031A                     __end_of_digit:	
  1520                           
  1521                           	psect	text5
  1522  0455                     __ptext5:	
  1523 ;; *************** function _delayOn *****************
  1524 ;; Defined at:
  1525 ;;		line 69 in file "main.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		None
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1539 ;;      Params:         0       0       0       0
  1540 ;;      Locals:         0       0       0       0
  1541 ;;      Temps:          0       0       0       0
  1542 ;;      Totals:         0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_light
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _delayOn
  1555  0455                     _delayOn:	
  1556  0455                     l75:	
  1557                           ;incstack = 0
  1558                           ; Regs used in _delayOn: []
  1559                           
  1560  0455  0008               	return
  1561  0456                     __end_of_delayOn:	
  1562                           
  1563                           	psect	text6
  1564  044B                     __ptext6:	
  1565 ;; *************** function _delayOff *****************
  1566 ;; Defined at:
  1567 ;;		line 74 in file "main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1581 ;;      Params:         0       0       0       0
  1582 ;;      Locals:         0       0       0       0
  1583 ;;      Temps:          1       0       0       0
  1584 ;;      Totals:         1       0       0       0
  1585 ;;Total ram usage:        1 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_light
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _delayOff
  1597  044B                     _delayOff:	
  1598  044B                     l1137:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _delayOff: [wreg]
  1601                           
  1602                           
  1603                           ;main.c: 76:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1604  044B  3003               	movlw	3
  1605  044C  00F2               	movwf	??_delayOff
  1606  044D                     u817:	
  1607  044D  0BF2               	decfsz	??_delayOff,f
  1608  044E  2C4D               	goto	u817
  1609  044F                     l78:	
  1610  044F  0008               	return
  1611  0450                     __end_of_delayOff:	
  1612                           
  1613                           	psect	text7
  1614  0226                     __ptext7:	
  1615 ;; *************** function ___almod *****************
  1616 ;; Defined at:
  1617 ;;		line 5 in file "E:\Programms\Micro\pic\sources\c90\common\almod.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  divisor         4    6[BANK0 ] long 
  1620 ;;  dividend        4   10[BANK0 ] long 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  sign            1   15[BANK0 ] unsigned char 
  1623 ;;  counter         1   14[BANK0 ] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  4    6[BANK0 ] long 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1633 ;;      Params:         0       8       0       0
  1634 ;;      Locals:         0       2       0       0
  1635 ;;      Temps:          1       0       0       0
  1636 ;;      Totals:         1      10       0       0
  1637 ;;Total ram usage:       11 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_showNumber
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function ___almod
  1649  0226                     ___almod:	
  1650  0226                     l1213:	
  1651                           ;incstack = 0
  1652                           ; Regs used in ___almod: [wreg+status,2+status,0]
  1653                           
  1654  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0228  01AF               	clrf	___almod@sign
  1657  0229                     l1215:	
  1658  0229  1FAD               	btfss	___almod@dividend+3,7
  1659  022A  2A2C               	goto	u511
  1660  022B  2A2D               	goto	u510
  1661  022C                     u511:	
  1662  022C  2A3A               	goto	l355
  1663  022D                     u510:	
  1664  022D                     l1217:	
  1665  022D  09AA               	comf	___almod@dividend,f
  1666  022E  09AB               	comf	___almod@dividend+1,f
  1667  022F  09AC               	comf	___almod@dividend+2,f
  1668  0230  09AD               	comf	___almod@dividend+3,f
  1669  0231  0AAA               	incf	___almod@dividend,f
  1670  0232  1903               	skipnz
  1671  0233  0AAB               	incf	___almod@dividend+1,f
  1672  0234  1903               	skipnz
  1673  0235  0AAC               	incf	___almod@dividend+2,f
  1674  0236  1903               	skipnz
  1675  0237  0AAD               	incf	___almod@dividend+3,f
  1676  0238  01AF               	clrf	___almod@sign
  1677  0239  0AAF               	incf	___almod@sign,f
  1678  023A                     l355:	
  1679  023A  1FA9               	btfss	___almod@divisor+3,7
  1680  023B  2A3D               	goto	u521
  1681  023C  2A3E               	goto	u520
  1682  023D                     u521:	
  1683  023D  2A49               	goto	l1221
  1684  023E                     u520:	
  1685  023E                     l1219:	
  1686  023E  09A6               	comf	___almod@divisor,f
  1687  023F  09A7               	comf	___almod@divisor+1,f
  1688  0240  09A8               	comf	___almod@divisor+2,f
  1689  0241  09A9               	comf	___almod@divisor+3,f
  1690  0242  0AA6               	incf	___almod@divisor,f
  1691  0243  1903               	skipnz
  1692  0244  0AA7               	incf	___almod@divisor+1,f
  1693  0245  1903               	skipnz
  1694  0246  0AA8               	incf	___almod@divisor+2,f
  1695  0247  1903               	skipnz
  1696  0248  0AA9               	incf	___almod@divisor+3,f
  1697  0249                     l1221:	
  1698  0249  0829               	movf	___almod@divisor+3,w
  1699  024A  0428               	iorwf	___almod@divisor+2,w
  1700  024B  0427               	iorwf	___almod@divisor+1,w
  1701  024C  0426               	iorwf	___almod@divisor,w
  1702  024D  1903               	skipnz
  1703  024E  2A50               	goto	u531
  1704  024F  2A51               	goto	u530
  1705  0250                     u531:	
  1706  0250  2A94               	goto	l1237
  1707  0251                     u530:	
  1708  0251                     l1223:	
  1709  0251  01AE               	clrf	___almod@counter
  1710  0252  0AAE               	incf	___almod@counter,f
  1711  0253  2A61               	goto	l1227
  1712  0254                     l1225:	
  1713  0254  3001               	movlw	1
  1714  0255  00FB               	movwf	??___almod
  1715  0256                     u545:	
  1716  0256  1003               	clrc
  1717  0257  0DA6               	rlf	___almod@divisor,f
  1718  0258  0DA7               	rlf	___almod@divisor+1,f
  1719  0259  0DA8               	rlf	___almod@divisor+2,f
  1720  025A  0DA9               	rlf	___almod@divisor+3,f
  1721  025B  0BFB               	decfsz	??___almod,f
  1722  025C  2A56               	goto	u545
  1723  025D  3001               	movlw	1
  1724  025E  00FB               	movwf	??___almod
  1725  025F  087B               	movf	??___almod,w
  1726  0260  07AE               	addwf	___almod@counter,f
  1727  0261                     l1227:	
  1728  0261  1FA9               	btfss	___almod@divisor+3,7
  1729  0262  2A64               	goto	u551
  1730  0263  2A65               	goto	u550
  1731  0264                     u551:	
  1732  0264  2A54               	goto	l1225
  1733  0265                     u550:	
  1734  0265                     l1229:	
  1735  0265  0829               	movf	___almod@divisor+3,w
  1736  0266  022D               	subwf	___almod@dividend+3,w
  1737  0267  1D03               	skipz
  1738  0268  2A73               	goto	u565
  1739  0269  0828               	movf	___almod@divisor+2,w
  1740  026A  022C               	subwf	___almod@dividend+2,w
  1741  026B  1D03               	skipz
  1742  026C  2A73               	goto	u565
  1743  026D  0827               	movf	___almod@divisor+1,w
  1744  026E  022B               	subwf	___almod@dividend+1,w
  1745  026F  1D03               	skipz
  1746  0270  2A73               	goto	u565
  1747  0271  0826               	movf	___almod@divisor,w
  1748  0272  022A               	subwf	___almod@dividend,w
  1749  0273                     u565:	
  1750  0273  1C03               	skipc
  1751  0274  2A76               	goto	u561
  1752  0275  2A77               	goto	u560
  1753  0276                     u561:	
  1754  0276  2A85               	goto	l1233
  1755  0277                     u560:	
  1756  0277                     l1231:	
  1757  0277  0826               	movf	___almod@divisor,w
  1758  0278  02AA               	subwf	___almod@dividend,f
  1759  0279  0827               	movf	___almod@divisor+1,w
  1760  027A  1C03               	skipc
  1761  027B  0F27               	incfsz	___almod@divisor+1,w
  1762  027C  02AB               	subwf	___almod@dividend+1,f
  1763  027D  0828               	movf	___almod@divisor+2,w
  1764  027E  1C03               	skipc
  1765  027F  0F28               	incfsz	___almod@divisor+2,w
  1766  0280  02AC               	subwf	___almod@dividend+2,f
  1767  0281  0829               	movf	___almod@divisor+3,w
  1768  0282  1C03               	skipc
  1769  0283  0F29               	incfsz	___almod@divisor+3,w
  1770  0284  02AD               	subwf	___almod@dividend+3,f
  1771  0285                     l1233:	
  1772  0285  3001               	movlw	1
  1773  0286                     u575:	
  1774  0286  1003               	clrc
  1775  0287  0CA9               	rrf	___almod@divisor+3,f
  1776  0288  0CA8               	rrf	___almod@divisor+2,f
  1777  0289  0CA7               	rrf	___almod@divisor+1,f
  1778  028A  0CA6               	rrf	___almod@divisor,f
  1779  028B  3EFF               	addlw	-1
  1780  028C  1D03               	skipz
  1781  028D  2A86               	goto	u575
  1782  028E                     l1235:	
  1783  028E  3001               	movlw	1
  1784  028F  02AE               	subwf	___almod@counter,f
  1785  0290  1D03               	btfss	3,2
  1786  0291  2A93               	goto	u581
  1787  0292  2A94               	goto	u580
  1788  0293                     u581:	
  1789  0293  2A65               	goto	l1229
  1790  0294                     u580:	
  1791  0294                     l1237:	
  1792  0294  082F               	movf	___almod@sign,w
  1793  0295  1903               	btfsc	3,2
  1794  0296  2A98               	goto	u591
  1795  0297  2A99               	goto	u590
  1796  0298                     u591:	
  1797  0298  2AA4               	goto	l1241
  1798  0299                     u590:	
  1799  0299                     l1239:	
  1800  0299  09AA               	comf	___almod@dividend,f
  1801  029A  09AB               	comf	___almod@dividend+1,f
  1802  029B  09AC               	comf	___almod@dividend+2,f
  1803  029C  09AD               	comf	___almod@dividend+3,f
  1804  029D  0AAA               	incf	___almod@dividend,f
  1805  029E  1903               	skipnz
  1806  029F  0AAB               	incf	___almod@dividend+1,f
  1807  02A0  1903               	skipnz
  1808  02A1  0AAC               	incf	___almod@dividend+2,f
  1809  02A2  1903               	skipnz
  1810  02A3  0AAD               	incf	___almod@dividend+3,f
  1811  02A4                     l1241:	
  1812  02A4  082D               	movf	___almod@dividend+3,w
  1813  02A5  00A9               	movwf	?___almod+3
  1814  02A6  082C               	movf	___almod@dividend+2,w
  1815  02A7  00A8               	movwf	?___almod+2
  1816  02A8  082B               	movf	___almod@dividend+1,w
  1817  02A9  00A7               	movwf	?___almod+1
  1818  02AA  082A               	movf	___almod@dividend,w
  1819  02AB  00A6               	movwf	?___almod
  1820  02AC                     l365:	
  1821  02AC  0008               	return
  1822  02AD                     __end_of___almod:	
  1823                           
  1824                           	psect	text8
  1825  0189                     __ptext8:	
  1826 ;; *************** function ___aldiv *****************
  1827 ;; Defined at:
  1828 ;;		line 5 in file "E:\Programms\Micro\pic\sources\c90\common\aldiv.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  divisor         4    2[COMMON] long 
  1831 ;;  dividend        4    6[COMMON] long 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  quotient        4    2[BANK0 ] long 
  1834 ;;  sign            1    1[BANK0 ] unsigned char 
  1835 ;;  counter         1    0[BANK0 ] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  4    2[COMMON] long 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1845 ;;      Params:         8       0       0       0
  1846 ;;      Locals:         0       6       0       0
  1847 ;;      Temps:          1       0       0       0
  1848 ;;      Totals:         9       6       0       0
  1849 ;;Total ram usage:       15 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_showNumber
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function ___aldiv
  1861  0189                     ___aldiv:	
  1862  0189                     l1173:	
  1863                           ;incstack = 0
  1864                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1865                           
  1866  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1867  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1868  018B  01A1               	clrf	___aldiv@sign
  1869  018C                     l1175:	
  1870  018C  1FF5               	btfss	___aldiv@divisor+3,7
  1871  018D  298F               	goto	u411
  1872  018E  2990               	goto	u410
  1873  018F                     u411:	
  1874  018F  299D               	goto	l342
  1875  0190                     u410:	
  1876  0190                     l1177:	
  1877  0190  09F2               	comf	___aldiv@divisor,f
  1878  0191  09F3               	comf	___aldiv@divisor+1,f
  1879  0192  09F4               	comf	___aldiv@divisor+2,f
  1880  0193  09F5               	comf	___aldiv@divisor+3,f
  1881  0194  0AF2               	incf	___aldiv@divisor,f
  1882  0195  1903               	skipnz
  1883  0196  0AF3               	incf	___aldiv@divisor+1,f
  1884  0197  1903               	skipnz
  1885  0198  0AF4               	incf	___aldiv@divisor+2,f
  1886  0199  1903               	skipnz
  1887  019A  0AF5               	incf	___aldiv@divisor+3,f
  1888  019B  01A1               	clrf	___aldiv@sign
  1889  019C  0AA1               	incf	___aldiv@sign,f
  1890  019D                     l342:	
  1891  019D  1FF9               	btfss	___aldiv@dividend+3,7
  1892  019E  29A0               	goto	u421
  1893  019F  29A1               	goto	u420
  1894  01A0                     u421:	
  1895  01A0  29B0               	goto	l1183
  1896  01A1                     u420:	
  1897  01A1                     l1179:	
  1898  01A1  09F6               	comf	___aldiv@dividend,f
  1899  01A2  09F7               	comf	___aldiv@dividend+1,f
  1900  01A3  09F8               	comf	___aldiv@dividend+2,f
  1901  01A4  09F9               	comf	___aldiv@dividend+3,f
  1902  01A5  0AF6               	incf	___aldiv@dividend,f
  1903  01A6  1903               	skipnz
  1904  01A7  0AF7               	incf	___aldiv@dividend+1,f
  1905  01A8  1903               	skipnz
  1906  01A9  0AF8               	incf	___aldiv@dividend+2,f
  1907  01AA  1903               	skipnz
  1908  01AB  0AF9               	incf	___aldiv@dividend+3,f
  1909  01AC                     l1181:	
  1910  01AC  3001               	movlw	1
  1911  01AD  00FA               	movwf	??___aldiv
  1912  01AE  087A               	movf	??___aldiv,w
  1913  01AF  06A1               	xorwf	___aldiv@sign,f
  1914  01B0                     l1183:	
  1915  01B0  3000               	movlw	0
  1916  01B1  00A5               	movwf	___aldiv@quotient+3
  1917  01B2  3000               	movlw	0
  1918  01B3  00A4               	movwf	___aldiv@quotient+2
  1919  01B4  3000               	movlw	0
  1920  01B5  00A3               	movwf	___aldiv@quotient+1
  1921  01B6  3000               	movlw	0
  1922  01B7  00A2               	movwf	___aldiv@quotient
  1923  01B8                     l1185:	
  1924  01B8  0875               	movf	___aldiv@divisor+3,w
  1925  01B9  0474               	iorwf	___aldiv@divisor+2,w
  1926  01BA  0473               	iorwf	___aldiv@divisor+1,w
  1927  01BB  0472               	iorwf	___aldiv@divisor,w
  1928  01BC  1903               	skipnz
  1929  01BD  29BF               	goto	u431
  1930  01BE  29C0               	goto	u430
  1931  01BF                     u431:	
  1932  01BF  2A0D               	goto	l1205
  1933  01C0                     u430:	
  1934  01C0                     l1187:	
  1935  01C0  01A0               	clrf	___aldiv@counter
  1936  01C1  0AA0               	incf	___aldiv@counter,f
  1937  01C2  29D0               	goto	l1191
  1938  01C3                     l1189:	
  1939  01C3  3001               	movlw	1
  1940  01C4  00FA               	movwf	??___aldiv
  1941  01C5                     u445:	
  1942  01C5  1003               	clrc
  1943  01C6  0DF2               	rlf	___aldiv@divisor,f
  1944  01C7  0DF3               	rlf	___aldiv@divisor+1,f
  1945  01C8  0DF4               	rlf	___aldiv@divisor+2,f
  1946  01C9  0DF5               	rlf	___aldiv@divisor+3,f
  1947  01CA  0BFA               	decfsz	??___aldiv,f
  1948  01CB  29C5               	goto	u445
  1949  01CC  3001               	movlw	1
  1950  01CD  00FA               	movwf	??___aldiv
  1951  01CE  087A               	movf	??___aldiv,w
  1952  01CF  07A0               	addwf	___aldiv@counter,f
  1953  01D0                     l1191:	
  1954  01D0  1FF5               	btfss	___aldiv@divisor+3,7
  1955  01D1  29D3               	goto	u451
  1956  01D2  29D4               	goto	u450
  1957  01D3                     u451:	
  1958  01D3  29C3               	goto	l1189
  1959  01D4                     u450:	
  1960  01D4                     l1193:	
  1961  01D4  3001               	movlw	1
  1962  01D5  00FA               	movwf	??___aldiv
  1963  01D6                     u465:	
  1964  01D6  1003               	clrc
  1965  01D7  0DA2               	rlf	___aldiv@quotient,f
  1966  01D8  0DA3               	rlf	___aldiv@quotient+1,f
  1967  01D9  0DA4               	rlf	___aldiv@quotient+2,f
  1968  01DA  0DA5               	rlf	___aldiv@quotient+3,f
  1969  01DB  0BFA               	decfsz	??___aldiv,f
  1970  01DC  29D6               	goto	u465
  1971  01DD                     l1195:	
  1972  01DD  0875               	movf	___aldiv@divisor+3,w
  1973  01DE  0279               	subwf	___aldiv@dividend+3,w
  1974  01DF  1D03               	skipz
  1975  01E0  29EB               	goto	u475
  1976  01E1  0874               	movf	___aldiv@divisor+2,w
  1977  01E2  0278               	subwf	___aldiv@dividend+2,w
  1978  01E3  1D03               	skipz
  1979  01E4  29EB               	goto	u475
  1980  01E5  0873               	movf	___aldiv@divisor+1,w
  1981  01E6  0277               	subwf	___aldiv@dividend+1,w
  1982  01E7  1D03               	skipz
  1983  01E8  29EB               	goto	u475
  1984  01E9  0872               	movf	___aldiv@divisor,w
  1985  01EA  0276               	subwf	___aldiv@dividend,w
  1986  01EB                     u475:	
  1987  01EB  1C03               	skipc
  1988  01EC  29EE               	goto	u471
  1989  01ED  29EF               	goto	u470
  1990  01EE                     u471:	
  1991  01EE  29FE               	goto	l1201
  1992  01EF                     u470:	
  1993  01EF                     l1197:	
  1994  01EF  0872               	movf	___aldiv@divisor,w
  1995  01F0  02F6               	subwf	___aldiv@dividend,f
  1996  01F1  0873               	movf	___aldiv@divisor+1,w
  1997  01F2  1C03               	skipc
  1998  01F3  0F73               	incfsz	___aldiv@divisor+1,w
  1999  01F4  02F7               	subwf	___aldiv@dividend+1,f
  2000  01F5  0874               	movf	___aldiv@divisor+2,w
  2001  01F6  1C03               	skipc
  2002  01F7  0F74               	incfsz	___aldiv@divisor+2,w
  2003  01F8  02F8               	subwf	___aldiv@dividend+2,f
  2004  01F9  0875               	movf	___aldiv@divisor+3,w
  2005  01FA  1C03               	skipc
  2006  01FB  0F75               	incfsz	___aldiv@divisor+3,w
  2007  01FC  02F9               	subwf	___aldiv@dividend+3,f
  2008  01FD                     l1199:	
  2009  01FD  1422               	bsf	___aldiv@quotient,0
  2010  01FE                     l1201:	
  2011  01FE  3001               	movlw	1
  2012  01FF                     u485:	
  2013  01FF  1003               	clrc
  2014  0200  0CF5               	rrf	___aldiv@divisor+3,f
  2015  0201  0CF4               	rrf	___aldiv@divisor+2,f
  2016  0202  0CF3               	rrf	___aldiv@divisor+1,f
  2017  0203  0CF2               	rrf	___aldiv@divisor,f
  2018  0204  3EFF               	addlw	-1
  2019  0205  1D03               	skipz
  2020  0206  29FF               	goto	u485
  2021  0207                     l1203:	
  2022  0207  3001               	movlw	1
  2023  0208  02A0               	subwf	___aldiv@counter,f
  2024  0209  1D03               	btfss	3,2
  2025  020A  2A0C               	goto	u491
  2026  020B  2A0D               	goto	u490
  2027  020C                     u491:	
  2028  020C  29D4               	goto	l1193
  2029  020D                     u490:	
  2030  020D                     l1205:	
  2031  020D  0821               	movf	___aldiv@sign,w
  2032  020E  1903               	btfsc	3,2
  2033  020F  2A11               	goto	u501
  2034  0210  2A12               	goto	u500
  2035  0211                     u501:	
  2036  0211  2A1D               	goto	l1209
  2037  0212                     u500:	
  2038  0212                     l1207:	
  2039  0212  09A2               	comf	___aldiv@quotient,f
  2040  0213  09A3               	comf	___aldiv@quotient+1,f
  2041  0214  09A4               	comf	___aldiv@quotient+2,f
  2042  0215  09A5               	comf	___aldiv@quotient+3,f
  2043  0216  0AA2               	incf	___aldiv@quotient,f
  2044  0217  1903               	skipnz
  2045  0218  0AA3               	incf	___aldiv@quotient+1,f
  2046  0219  1903               	skipnz
  2047  021A  0AA4               	incf	___aldiv@quotient+2,f
  2048  021B  1903               	skipnz
  2049  021C  0AA5               	incf	___aldiv@quotient+3,f
  2050  021D                     l1209:	
  2051  021D  0825               	movf	___aldiv@quotient+3,w
  2052  021E  00F5               	movwf	?___aldiv+3
  2053  021F  0824               	movf	___aldiv@quotient+2,w
  2054  0220  00F4               	movwf	?___aldiv+2
  2055  0221  0823               	movf	___aldiv@quotient+1,w
  2056  0222  00F3               	movwf	?___aldiv+1
  2057  0223  0822               	movf	___aldiv@quotient,w
  2058  0224  00F2               	movwf	?___aldiv
  2059  0225                     l352:	
  2060  0225  0008               	return
  2061  0226                     __end_of___aldiv:	
  2062                           
  2063                           	psect	text9
  2064  0426                     __ptext9:	
  2065 ;; *************** function _pwm *****************
  2066 ;; Defined at:
  2067 ;;		line 30 in file "main.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2081 ;;      Params:         0       0       0       0
  2082 ;;      Locals:         0       0       0       0
  2083 ;;      Temps:          0       0       0       0
  2084 ;;      Totals:         0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _pwm
  2097  0426                     _pwm:	
  2098  0426                     l1245:	
  2099                           ;incstack = 0
  2100                           ; Regs used in _pwm: [wreg]
  2101                           
  2102                           
  2103                           ;main.c: 36: PR2 = 0b00110001 ;
  2104  0426  3031               	movlw	49
  2105  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2106  0428  1303               	bcf	3,6	;RP1=0, select bank1
  2107  0429  0092               	movwf	18	;volatile
  2108                           
  2109                           ;main.c: 37: T2CON = 0b00000100 ;
  2110  042A  3004               	movlw	4
  2111  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2112  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2113  042D  0092               	movwf	18	;volatile
  2114                           
  2115                           ;main.c: 38: CCPR1L = 0b00101010 ;
  2116  042E  302A               	movlw	42
  2117  042F  0095               	movwf	21	;volatile
  2118                           
  2119                           ;main.c: 39: CCP1CON = 0b00011100 ;
  2120  0430  301C               	movlw	28
  2121  0431  0097               	movwf	23	;volatile
  2122  0432                     l54:	
  2123  0432  0008               	return
  2124  0433                     __end_of_pwm:	
  2125                           
  2126                           	psect	text10
  2127  0408                     __ptext10:	
  2128 ;; *************** function _incrementTime *****************
  2129 ;; Defined at:
  2130 ;;		line 113 in file "main.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  time            8    2[COMMON] struct Time
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  8    2[COMMON] struct Time
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2144 ;;      Params:         8       0       0       0
  2145 ;;      Locals:         0       0       0       0
  2146 ;;      Temps:          1       0       0       0
  2147 ;;      Totals:         9       0       0       0
  2148 ;;Total ram usage:        9 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _incrementTime
  2160  0408                     _incrementTime:	
  2161  0408                     l1257:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _incrementTime: [wreg+status,2+status,0]
  2164                           
  2165                           
  2166                           ;main.c: 113: struct Time incrementTime(struct Time time);main.c: 114: {;main.c: 115:   
      +                            if (time.seconds==59)
  2167  0408  303B               	movlw	59
  2168  0409  0672               	xorwf	incrementTime@time,w
  2169  040A  1D03               	btfss	3,2
  2170  040B  2C0D               	goto	u611
  2171  040C  2C0E               	goto	u610
  2172  040D                     u611:	
  2173  040D  2C21               	goto	l1273
  2174  040E                     u610:	
  2175  040E                     l1259:	
  2176                           
  2177                           ;main.c: 116:     {;main.c: 117:         time.seconds=0;
  2178  040E  01F2               	clrf	incrementTime@time
  2179  040F                     l1261:	
  2180                           
  2181                           ;main.c: 118:         if (time.minutes==59)
  2182  040F  303B               	movlw	59
  2183  0410  0673               	xorwf	incrementTime@time+1,w
  2184  0411  1D03               	btfss	3,2
  2185  0412  2C14               	goto	u621
  2186  0413  2C15               	goto	u620
  2187  0414                     u621:	
  2188  0414  2C1C               	goto	l1271
  2189  0415                     u620:	
  2190  0415                     l1263:	
  2191                           
  2192                           ;main.c: 119:         {;main.c: 120:             time.minutes=0;
  2193  0415  01F3               	clrf	incrementTime@time+1
  2194  0416                     l1265:	
  2195                           
  2196                           ;main.c: 121:             if (time.hours=23)
  2197  0416  3017               	movlw	23
  2198  0417  00FA               	movwf	??_incrementTime
  2199  0418  087A               	movf	??_incrementTime,w
  2200  0419  00F4               	movwf	incrementTime@time+2
  2201  041A                     l1267:	
  2202                           
  2203                           ;main.c: 122:             {;main.c: 123:                 time.hours=0;
  2204  041A  01F4               	clrf	incrementTime@time+2
  2205                           
  2206                           ;main.c: 124:             }
  2207  041B  2C25               	goto	l1275
  2208  041C                     l1271:	
  2209                           
  2210                           ;main.c: 131:         {;main.c: 132:             time.minutes++;
  2211  041C  3001               	movlw	1
  2212  041D  00FA               	movwf	??_incrementTime
  2213  041E  087A               	movf	??_incrementTime,w
  2214  041F  07F3               	addwf	incrementTime@time+1,f
  2215  0420  2C25               	goto	l1275
  2216  0421                     l1273:	
  2217                           
  2218                           ;main.c: 136:     {;main.c: 137:         time.seconds++;
  2219  0421  3001               	movlw	1
  2220  0422  00FA               	movwf	??_incrementTime
  2221  0423  087A               	movf	??_incrementTime,w
  2222  0424  07F2               	addwf	incrementTime@time,f
  2223  0425                     l1275:	
  2224  0425                     l102:	
  2225                           ;main.c: 139:     return time;
  2226                           
  2227  0425  0008               	return
  2228  0426                     __end_of_incrementTime:	
  2229                           
  2230                           	psect	text11
  2231  03E3                     __ptext11:	
  2232 ;; *************** function ___wmul *****************
  2233 ;; Defined at:
  2234 ;;		line 15 in file "E:\Programms\Micro\pic\sources\c90\common\Umul16.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  multiplier      2    2[COMMON] unsigned int 
  2237 ;;  multiplicand    2    4[COMMON] unsigned int 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  product         2    6[COMMON] unsigned int 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  2    2[COMMON] unsigned int 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2249 ;;      Params:         4       0       0       0
  2250 ;;      Locals:         2       0       0       0
  2251 ;;      Temps:          0       0       0       0
  2252 ;;      Totals:         6       0       0       0
  2253 ;;Total ram usage:        6 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    1
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function ___wmul
  2265  03E3                     ___wmul:	
  2266  03E3                     l1349:	
  2267                           ;incstack = 0
  2268                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2269                           
  2270  03E3  01F6               	clrf	___wmul@product
  2271  03E4  01F7               	clrf	___wmul@product+1
  2272  03E5                     l1351:	
  2273  03E5  1C72               	btfss	___wmul@multiplier,0
  2274  03E6  2BE8               	goto	u631
  2275  03E7  2BE9               	goto	u630
  2276  03E8                     u631:	
  2277  03E8  2BEF               	goto	l277
  2278  03E9                     u630:	
  2279  03E9                     l1353:	
  2280  03E9  0874               	movf	___wmul@multiplicand,w
  2281  03EA  07F6               	addwf	___wmul@product,f
  2282  03EB  1803               	skipnc
  2283  03EC  0AF7               	incf	___wmul@product+1,f
  2284  03ED  0875               	movf	___wmul@multiplicand+1,w
  2285  03EE  07F7               	addwf	___wmul@product+1,f
  2286  03EF                     l277:	
  2287  03EF  3001               	movlw	1
  2288  03F0                     u645:	
  2289  03F0  1003               	clrc
  2290  03F1  0DF4               	rlf	___wmul@multiplicand,f
  2291  03F2  0DF5               	rlf	___wmul@multiplicand+1,f
  2292  03F3  3EFF               	addlw	-1
  2293  03F4  1D03               	skipz
  2294  03F5  2BF0               	goto	u645
  2295  03F6                     l1355:	
  2296  03F6  3001               	movlw	1
  2297  03F7                     u655:	
  2298  03F7  1003               	clrc
  2299  03F8  0CF3               	rrf	___wmul@multiplier+1,f
  2300  03F9  0CF2               	rrf	___wmul@multiplier,f
  2301  03FA  3EFF               	addlw	-1
  2302  03FB  1D03               	skipz
  2303  03FC  2BF7               	goto	u655
  2304  03FD                     l1357:	
  2305  03FD  0872               	movf	___wmul@multiplier,w
  2306  03FE  0473               	iorwf	___wmul@multiplier+1,w
  2307  03FF  1D03               	btfss	3,2
  2308  0400  2C02               	goto	u661
  2309  0401  2C03               	goto	u660
  2310  0402                     u661:	
  2311  0402  2BE5               	goto	l1351
  2312  0403                     u660:	
  2313  0403                     l1359:	
  2314  0403  0877               	movf	___wmul@product+1,w
  2315  0404  00F3               	movwf	?___wmul+1
  2316  0405  0876               	movf	___wmul@product,w
  2317  0406  00F2               	movwf	?___wmul
  2318  0407                     l279:	
  2319  0407  0008               	return
  2320  0408                     __end_of___wmul:	
  2321                           
  2322                           	psect	text12
  2323  031A                     __ptext12:	
  2324 ;; *************** function ___awdiv *****************
  2325 ;; Defined at:
  2326 ;;		line 5 in file "E:\Programms\Micro\pic\sources\c90\common\awdiv.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  divisor         2    2[COMMON] int 
  2329 ;;  dividend        2    4[COMMON] int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  quotient        2    9[COMMON] int 
  2332 ;;  sign            1    8[COMMON] unsigned char 
  2333 ;;  counter         1    7[COMMON] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  2    2[COMMON] int 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2343 ;;      Params:         4       0       0       0
  2344 ;;      Locals:         4       0       0       0
  2345 ;;      Temps:          1       0       0       0
  2346 ;;      Totals:         9       0       0       0
  2347 ;;Total ram usage:        9 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function ___awdiv
  2359  031A                     ___awdiv:	
  2360  031A                     l1363:	
  2361                           ;incstack = 0
  2362                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2363                           
  2364  031A  01F8               	clrf	___awdiv@sign
  2365  031B                     l1365:	
  2366  031B  1FF3               	btfss	___awdiv@divisor+1,7
  2367  031C  2B1E               	goto	u671
  2368  031D  2B1F               	goto	u670
  2369  031E                     u671:	
  2370  031E  2B26               	goto	l1371
  2371  031F                     u670:	
  2372  031F                     l1367:	
  2373  031F  09F2               	comf	___awdiv@divisor,f
  2374  0320  09F3               	comf	___awdiv@divisor+1,f
  2375  0321  0AF2               	incf	___awdiv@divisor,f
  2376  0322  1903               	skipnz
  2377  0323  0AF3               	incf	___awdiv@divisor+1,f
  2378  0324                     l1369:	
  2379  0324  01F8               	clrf	___awdiv@sign
  2380  0325  0AF8               	incf	___awdiv@sign,f
  2381  0326                     l1371:	
  2382  0326  1FF5               	btfss	___awdiv@dividend+1,7
  2383  0327  2B29               	goto	u681
  2384  0328  2B2A               	goto	u680
  2385  0329                     u681:	
  2386  0329  2B33               	goto	l1377
  2387  032A                     u680:	
  2388  032A                     l1373:	
  2389  032A  09F4               	comf	___awdiv@dividend,f
  2390  032B  09F5               	comf	___awdiv@dividend+1,f
  2391  032C  0AF4               	incf	___awdiv@dividend,f
  2392  032D  1903               	skipnz
  2393  032E  0AF5               	incf	___awdiv@dividend+1,f
  2394  032F                     l1375:	
  2395  032F  3001               	movlw	1
  2396  0330  00F6               	movwf	??___awdiv
  2397  0331  0876               	movf	??___awdiv,w
  2398  0332  06F8               	xorwf	___awdiv@sign,f
  2399  0333                     l1377:	
  2400  0333  01F9               	clrf	___awdiv@quotient
  2401  0334  01FA               	clrf	___awdiv@quotient+1
  2402  0335                     l1379:	
  2403  0335  0872               	movf	___awdiv@divisor,w
  2404  0336  0473               	iorwf	___awdiv@divisor+1,w
  2405  0337  1903               	btfsc	3,2
  2406  0338  2B3A               	goto	u691
  2407  0339  2B3B               	goto	u690
  2408  033A                     u691:	
  2409  033A  2B72               	goto	l1399
  2410  033B                     u690:	
  2411  033B                     l1381:	
  2412  033B  01F7               	clrf	___awdiv@counter
  2413  033C  0AF7               	incf	___awdiv@counter,f
  2414  033D  2B49               	goto	l1387
  2415  033E                     l1383:	
  2416  033E  3001               	movlw	1
  2417  033F                     u705:	
  2418  033F  1003               	clrc
  2419  0340  0DF2               	rlf	___awdiv@divisor,f
  2420  0341  0DF3               	rlf	___awdiv@divisor+1,f
  2421  0342  3EFF               	addlw	-1
  2422  0343  1D03               	skipz
  2423  0344  2B3F               	goto	u705
  2424  0345                     l1385:	
  2425  0345  3001               	movlw	1
  2426  0346  00F6               	movwf	??___awdiv
  2427  0347  0876               	movf	??___awdiv,w
  2428  0348  07F7               	addwf	___awdiv@counter,f
  2429  0349                     l1387:	
  2430  0349  1FF3               	btfss	___awdiv@divisor+1,7
  2431  034A  2B4C               	goto	u711
  2432  034B  2B4D               	goto	u710
  2433  034C                     u711:	
  2434  034C  2B3E               	goto	l1383
  2435  034D                     u710:	
  2436  034D                     l1389:	
  2437  034D  3001               	movlw	1
  2438  034E                     u725:	
  2439  034E  1003               	clrc
  2440  034F  0DF9               	rlf	___awdiv@quotient,f
  2441  0350  0DFA               	rlf	___awdiv@quotient+1,f
  2442  0351  3EFF               	addlw	-1
  2443  0352  1D03               	skipz
  2444  0353  2B4E               	goto	u725
  2445  0354  0873               	movf	___awdiv@divisor+1,w
  2446  0355  0275               	subwf	___awdiv@dividend+1,w
  2447  0356  1D03               	skipz
  2448  0357  2B5A               	goto	u735
  2449  0358  0872               	movf	___awdiv@divisor,w
  2450  0359  0274               	subwf	___awdiv@dividend,w
  2451  035A                     u735:	
  2452  035A  1C03               	skipc
  2453  035B  2B5D               	goto	u731
  2454  035C  2B5E               	goto	u730
  2455  035D                     u731:	
  2456  035D  2B65               	goto	l1395
  2457  035E                     u730:	
  2458  035E                     l1391:	
  2459  035E  0872               	movf	___awdiv@divisor,w
  2460  035F  02F4               	subwf	___awdiv@dividend,f
  2461  0360  0873               	movf	___awdiv@divisor+1,w
  2462  0361  1C03               	skipc
  2463  0362  03F5               	decf	___awdiv@dividend+1,f
  2464  0363  02F5               	subwf	___awdiv@dividend+1,f
  2465  0364                     l1393:	
  2466  0364  1479               	bsf	___awdiv@quotient,0
  2467  0365                     l1395:	
  2468  0365  3001               	movlw	1
  2469  0366                     u745:	
  2470  0366  1003               	clrc
  2471  0367  0CF3               	rrf	___awdiv@divisor+1,f
  2472  0368  0CF2               	rrf	___awdiv@divisor,f
  2473  0369  3EFF               	addlw	-1
  2474  036A  1D03               	skipz
  2475  036B  2B66               	goto	u745
  2476  036C                     l1397:	
  2477  036C  3001               	movlw	1
  2478  036D  02F7               	subwf	___awdiv@counter,f
  2479  036E  1D03               	btfss	3,2
  2480  036F  2B71               	goto	u751
  2481  0370  2B72               	goto	u750
  2482  0371                     u751:	
  2483  0371  2B4D               	goto	l1389
  2484  0372                     u750:	
  2485  0372                     l1399:	
  2486  0372  0878               	movf	___awdiv@sign,w
  2487  0373  1903               	btfsc	3,2
  2488  0374  2B76               	goto	u761
  2489  0375  2B77               	goto	u760
  2490  0376                     u761:	
  2491  0376  2B7C               	goto	l1403
  2492  0377                     u760:	
  2493  0377                     l1401:	
  2494  0377  09F9               	comf	___awdiv@quotient,f
  2495  0378  09FA               	comf	___awdiv@quotient+1,f
  2496  0379  0AF9               	incf	___awdiv@quotient,f
  2497  037A  1903               	skipnz
  2498  037B  0AFA               	incf	___awdiv@quotient+1,f
  2499  037C                     l1403:	
  2500  037C  087A               	movf	___awdiv@quotient+1,w
  2501  037D  00F3               	movwf	?___awdiv+1
  2502  037E  0879               	movf	___awdiv@quotient,w
  2503  037F  00F2               	movwf	?___awdiv
  2504  0380                     l430:	
  2505  0380  0008               	return
  2506  0381                     __end_of___awdiv:	
  2507                           
  2508                           	psect	text13
  2509  03B8                     __ptext13:	
  2510 ;; *************** function _InitApp *****************
  2511 ;; Defined at:
  2512 ;;		line 22 in file "user.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		status,2
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2526 ;;      Params:         0       0       0       0
  2527 ;;      Locals:         0       0       0       0
  2528 ;;      Temps:          0       0       0       0
  2529 ;;      Totals:         0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function _InitApp
  2542  03B8                     _InitApp:	
  2543  03B8                     l1283:	
  2544                           ;incstack = 0
  2545                           ; Regs used in _InitApp: [status,2]
  2546                           
  2547                           
  2548                           ;user.c: 24:     TRISA=0x00;
  2549  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2550  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  2551  03BA  0185               	clrf	5	;volatile
  2552  03BB                     l1285:	
  2553                           
  2554                           ;user.c: 25:     TRISA5=1;
  2555  03BB  1685               	bsf	5,5	;volatile
  2556  03BC                     l1287:	
  2557                           
  2558                           ;user.c: 26:     TRISA4=1;
  2559  03BC  1605               	bsf	5,4	;volatile
  2560  03BD                     l1289:	
  2561                           
  2562                           ;user.c: 27:     TRISA1=1;
  2563  03BD  1485               	bsf	5,1	;volatile
  2564  03BE                     l1291:	
  2565                           
  2566                           ;user.c: 28:     TRISA2=0;
  2567  03BE  1105               	bcf	5,2	;volatile
  2568  03BF                     l1293:	
  2569                           
  2570                           ;user.c: 30:     VREN=0; VROE=0; VRR=0; VR0=1; VR1=1; VR2=1; VR3=1;
  2571  03BF  139F               	bcf	31,7	;volatile
  2572  03C0                     l1295:	
  2573  03C0  131F               	bcf	31,6	;volatile
  2574  03C1                     l1297:	
  2575  03C1  129F               	bcf	31,5	;volatile
  2576  03C2                     l1299:	
  2577  03C2  141F               	bsf	31,0	;volatile
  2578  03C3                     l1301:	
  2579  03C3  149F               	bsf	31,1	;volatile
  2580  03C4                     l1303:	
  2581  03C4  151F               	bsf	31,2	;volatile
  2582  03C5                     l1305:	
  2583  03C5  159F               	bsf	31,3	;volatile
  2584  03C6                     l1307:	
  2585                           
  2586                           ;user.c: 32:     CM0=1; CM1=1; CM2=1;
  2587  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2588  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2589  03C8  141F               	bsf	31,0	;volatile
  2590  03C9                     l1309:	
  2591  03C9  149F               	bsf	31,1	;volatile
  2592  03CA                     l1311:	
  2593  03CA  151F               	bsf	31,2	;volatile
  2594                           
  2595                           ;user.c: 34:     TRISB=0x00;
  2596  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  2597  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  2598  03CD  0186               	clrf	6	;volatile
  2599  03CE                     l1313:	
  2600                           
  2601                           ;user.c: 35:     TRISB6=1;
  2602  03CE  1706               	bsf	6,6	;volatile
  2603  03CF                     l1315:	
  2604                           
  2605                           ;user.c: 36:     TRISB7=1;
  2606  03CF  1786               	bsf	6,7	;volatile
  2607  03D0                     l1317:	
  2608                           
  2609                           ;user.c: 38:     RA0=0;
  2610  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2611  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2612  03D2  1005               	bcf	5,0	;volatile
  2613  03D3                     l1319:	
  2614                           
  2615                           ;user.c: 39:     RA1=1;
  2616  03D3  1485               	bsf	5,1	;volatile
  2617  03D4                     l1321:	
  2618                           
  2619                           ;user.c: 40:     RA2=0;
  2620  03D4  1105               	bcf	5,2	;volatile
  2621  03D5                     l1323:	
  2622                           
  2623                           ;user.c: 41:     RA3=0;
  2624  03D5  1185               	bcf	5,3	;volatile
  2625  03D6                     l1325:	
  2626                           
  2627                           ;user.c: 42:     RA4=0;
  2628  03D6  1205               	bcf	5,4	;volatile
  2629  03D7                     l1327:	
  2630                           
  2631                           ;user.c: 43:     RA5=0;
  2632  03D7  1285               	bcf	5,5	;volatile
  2633  03D8                     l1329:	
  2634                           
  2635                           ;user.c: 44:     RA6=0;
  2636  03D8  1305               	bcf	5,6	;volatile
  2637  03D9                     l1331:	
  2638                           
  2639                           ;user.c: 45:     RA7=0;
  2640  03D9  1385               	bcf	5,7	;volatile
  2641  03DA                     l1333:	
  2642                           
  2643                           ;user.c: 47:     RB0=0;
  2644  03DA  1006               	bcf	6,0	;volatile
  2645  03DB                     l1335:	
  2646                           
  2647                           ;user.c: 48:     RB1=0;
  2648  03DB  1086               	bcf	6,1	;volatile
  2649  03DC                     l1337:	
  2650                           
  2651                           ;user.c: 49:     RB2=0;
  2652  03DC  1106               	bcf	6,2	;volatile
  2653  03DD                     l1339:	
  2654                           
  2655                           ;user.c: 50:     RB3=0;
  2656  03DD  1186               	bcf	6,3	;volatile
  2657  03DE                     l1341:	
  2658                           
  2659                           ;user.c: 51:     RB4=0;
  2660  03DE  1206               	bcf	6,4	;volatile
  2661  03DF                     l1343:	
  2662                           
  2663                           ;user.c: 52:     RB5=0;
  2664  03DF  1286               	bcf	6,5	;volatile
  2665  03E0                     l1345:	
  2666                           
  2667                           ;user.c: 53:     RB6=0;
  2668  03E0  1306               	bcf	6,6	;volatile
  2669  03E1                     l1347:	
  2670                           
  2671                           ;user.c: 54:     RB7=0;
  2672  03E1  1386               	bcf	6,7	;volatile
  2673  03E2                     l191:	
  2674  03E2  0008               	return
  2675  03E3                     __end_of_InitApp:	
  2676                           
  2677                           	psect	text14
  2678  0450                     __ptext14:	
  2679 ;; *************** function _ConfigureOscillator *****************
  2680 ;; Defined at:
  2681 ;;		line 20 in file "system.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2695 ;;      Params:         0       0       0       0
  2696 ;;      Locals:         0       0       0       0
  2697 ;;      Temps:          0       0       0       0
  2698 ;;      Totals:         0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _ConfigureOscillator
  2711  0450                     _ConfigureOscillator:	
  2712  0450                     l1279:	
  2713                           ;incstack = 0
  2714                           ; Regs used in _ConfigureOscillator: [wreg]
  2715                           
  2716                           
  2717                           ;system.c: 22:     PCON,OSCF = 1;
  2718  0450  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0451  1303               	bcf	3,6	;RP1=0, select bank1
  2720  0452  080E               	movf	14,w	;volatile
  2721  0453                     l1281:	
  2722  0453  158E               	bsf	14,3	;volatile
  2723  0454                     l120:	
  2724  0454  0008               	return
  2725  0455                     __end_of_ConfigureOscillator:	
  2726                           
  2727                           	psect	text15
  2728  0444                     __ptext15:	
  2729 ;; *************** function _isr *****************
  2730 ;; Defined at:
  2731 ;;		line 23 in file "interrupts.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		None
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2745 ;;      Params:         0       0       0       0
  2746 ;;      Locals:         0       0       0       0
  2747 ;;      Temps:          2       0       0       0
  2748 ;;      Totals:         2       0       0       0
  2749 ;;Total ram usage:        2 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		Interrupt level 1
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _isr
  2760  0444                     _isr:	
  2761  0444                     i1l5:	
  2762  0444  0871               	movf	??_isr+1,w
  2763  0445  008A               	movwf	10
  2764  0446  0E70               	swapf	??_isr^(0+4294967168),w
  2765  0447  0083               	movwf	3
  2766  0448  0EFE               	swapf	btemp,f
  2767  0449  0E7E               	swapf	btemp,w
  2768  044A  0009               	retfie
  2769  044B                     __end_of_isr:	
  2770  007E                     btemp	set	126	;btemp
  2771  007E                     wtemp0	set	126
  2772                           
  2773                           	psect	intentry
  2774  0004                     __pintentry:	
  2775                           ;incstack = 0
  2776                           ; Regs used in _isr: []
  2777                           
  2778  0004                     interrupt_function:	
  2779  007E                     saved_w	set	btemp
  2780  0004  00FE               	movwf	btemp
  2781  0005  0E03               	swapf	3,w
  2782  0006  00F0               	movwf	??_isr
  2783  0007  080A               	movf	10,w
  2784  0008  00F1               	movwf	??_isr+1
  2785  0009  2C44               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     49      57
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _showNumber->___almod
    _light->___almod
    ___almod->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_showNumber
    _showNumber->_light
    _light->___almod
    ___almod->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    3949
                                             29 BANK0     20    20      0
                _ConfigureOscillator
                            _InitApp
                            ___awdiv
                             ___wmul
                      _incrementTime
                                _pwm
                         _showNumber
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _showNumber                                           9     3      6    2544
                                             20 BANK0      9     3      6
                            ___aldiv
                            ___almod
                             ___wmul (ARG)
                              _light
 ---------------------------------------------------------------------------------
 (2) _light                                                4     0      4     750
                                             16 BANK0      4     0      4
                            ___aldiv (ARG)
                            ___almod (ARG)
                           _delayOff
                            _delayOn
                              _digit
 ---------------------------------------------------------------------------------
 (3) _digit                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _delayOff                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     752
                                             11 COMMON     1     1      0
                                              6 BANK0     10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     756
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incrementTime                                        9     1      8     265
                                              2 COMMON     9     1      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___awdiv
   ___wmul
   _incrementTime
   _pwm
   _showNumber
     ___aldiv
     ___almod
       ___aldiv (ARG)
     ___wmul (ARG)
     _light (ARG)
       ___aldiv (ARG)
       ___almod (ARG)
         ___aldiv (ARG)
       _delayOff (ARG)
       _delayOn (ARG)
       _digit (ARG)
   _timer

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     31      39       3       71.3%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      10        0.0%
ABS                  0      0      45       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jan 11 22:48:56 2020

                 __CFG_CP$OFF 0000                            l61 02AE                            l54 0432  
                          l70 02E6                            l71 02ED                            l63 02B5  
                          l64 02BC                            l72 0319                            l65 02C3  
                          l57 043B                            l66 02CA                            l82 0389  
                          l75 0455                            l67 02D1                            l68 02D8  
                          l84 0390                            l69 02DF                            l85 0396  
                          l93 00D5                            l78 044F                            l86 039C  
                          l87 03B7                  ___awdiv@sign 0078           ___wmul@multiplicand 0074  
                         l102 0425                           l120 0454                           l430 0380  
                         l342 019D                           l191 03E2                           l352 0225  
                         l355 023A                           l277 03EF                           l365 02AC  
                         _CM0 00F8                           l279 0407                           _CM1 00F9  
                         _CM2 00FA                           _RA0 0028                           _RA1 0029  
                         _RA2 002A                           _RB0 0030                           _RB1 0031  
                         _RA3 002B                           _RB2 0032                           _RA4 002C  
                         _RA5 002D                           _RB3 0033                           _RA6 002E  
                         _RB4 0034                           _RA7 002F                           _RB5 0035  
                         _RB6 0036                           _RB7 0037                           u410 0190  
                         u411 018F                           u500 0212                           u420 01A1  
                         u501 0211                           u421 01A0                           u430 01C0  
                         u510 022D                           _PR2 0092                           u431 01BF  
                         u511 022C                           u520 023E                           u600 00D5  
                         u521 023D                           u601 00D4                           u610 040E  
                         u450 01D4                           u530 0251                  __CFG_CPD$OFF 0000  
                         u611 040D                           u451 01D3                           u531 0250  
                         u620 0415                           u621 0414                           u445 01C5  
                         u605 00D1                           u710 034D                           u630 03E9  
                         u470 01EF                           u550 0265                           u711 034C  
                         u631 03E8                           u471 01EE                           u551 0264  
                         u560 0277                           u800 0152                           i1l5 0444  
                         u705 033F                           u465 01D6                           u561 0276  
                         u545 0256                           u730 035E                           u490 020D  
                         u731 035D                           u491 020C                           u475 01EB  
                         u660 0403                           u580 0294                           u725 034E  
                         u661 0402                           u645 03F0                           u485 01FF  
                         u581 0293                           u565 0273                           u750 0372  
                         u670 031F                           u590 0299                           u751 0371  
                         u735 035A                           u671 031E                           u655 03F7  
                         u591 0298                           u575 0286                           u760 0377  
                         u680 032A                           u761 0376                           u745 0366  
                         u681 0329                           u817 044D                           u690 033B  
                         u770 00E4                           u691 033A                           u780 0132  
                         _VR0 04F8                           u781 0131                           _VR1 04F9  
                         u790 013A                           _VR2 04FA                           _VR3 04FB  
                         _VRR 04FD                           _isr 0444                           fsr0 0004  
                         _pwm 0426                           indf 0000                  __CFG_LVP$OFF 0000  
                        l1201 01FE                          l1203 0207                          l1131 02F4  
                        l1301 03C3                          l1205 020D                          l1221 0249  
                        l1213 0226                          l1141 038A                          l1311 03CA  
                        l1303 03C4                          l1207 0212                          l1231 0277  
                        l1223 0251                          l1215 0229                          l1127 02AD  
                        l1143 038B                          l1321 03D4                          l1313 03CE  
                        l1305 03C5                          l1401 0377                          l1209 021D  
                        l1241 02A4                          l1233 0285                          l1225 0254  
                        l1217 022D                          l1137 044B                          l1161 039E  
                        l1153 0397                          l1145 038E                          l1331 03D9  
                        l1323 03D5                          l1315 03CF                          l1307 03C6  
                        l1403 037C                          l1235 028E                          l1227 0261  
                        l1219 023E                          l1155 0398                          l1147 0391  
                        l1139 0381                          l1251 0022                          l1411 00D9  
                        l1341 03DE                          l1333 03DA                          l1325 03D6  
                        l1317 03D0                          l1309 03C9                          l1261 040F  
                        l1245 0426                          l1181 01AC                          l1173 0189  
                        l1229 0265                          l1237 0294                          l1149 0392  
                        l1253 00BF                          l1421 0110                          l1413 00DA  
                        l1343 03DF                          l1335 03DB                          l1327 03D7  
                        l1319 03D3                          l1351 03E5                          l1263 0415  
                        l1271 041C                          l1191 01D0                          l1183 01B0  
                        l1175 018C                          l1239 0299                          l1159 039D  
                        l1167 03A2                          l1255 00C7                          l1247 0433  
                        l1423 0124                          l1415 00F1                          l1407 00D6  
                        l1281 0453                          l1345 03E0                          l1337 03DC  
                        l1329 03D8                          l1353 03E9                          l1265 0416  
                        l1273 0421                          l1257 0408                          l1193 01D4  
                        l1185 01B8                          l1177 0190                          l1249 001D  
                        l1425 0132                          l1417 00F2                          l1409 00D8  
                        l1347 03E1                          l1339 03DD                          l1291 03BE  
                        l1283 03B8                          l1371 0326                          l1363 031A  
                        l1355 03F6                          l1275 0425                          l1267 041A  
                        l1259 040E                          l1195 01DD                          l1187 01C0  
                        l1179 01A1                          l1427 015F                          l1419 0104  
                        l1293 03BF                          l1285 03BB                          l1381 033B  
                        l1373 032A                          l1365 031B                          l1357 03FD  
                        l1349 03E3                          l1197 01EF                          l1189 01C3  
                        l1429 0163                          l1279 0450                          l1295 03C0  
                        l1287 03BC                          l1391 035E                          l1383 033E  
                        l1375 032F                          l1367 031F                          l1359 0403  
                        l1199 01FD                          l1471 03A9                          l1297 03C1  
                        l1289 03BD                          l1393 0364                          l1385 0345  
                        l1377 0333                          l1369 0324                          l1473 02F9  
                        l1299 03C2                          l1395 0365                          l1387 0349  
                        l1379 0335                          l1397 036C                          l1389 034D  
                        l1399 0372                          ?_isr 0070                          ?_pwm 0070  
                        _PCON 008E                          _OSCF 0473                          _VREN 04FF  
                        _VROE 04FE                          _main 00D6                          btemp 007E  
               __CFG_BOREN$ON 0000                   main@tmr_now 0047                          start 000A  
             __end_of_InitApp 03E3                         ??_isr 0070                         ??_pwm 0072  
             __end_of___aldiv 0226               __end_of___almod 02AD                         ?_main 0070  
             __end_of___awdiv 0381                 __CFG_WDTE$OFF 0000               ___awdiv@divisor 0072  
                       _T2CON 0012               ___awdiv@counter 0077                         _TMR1H 000F  
                       _TRISA 0085                         _TRISB 0086           _ConfigureOscillator 0450  
             __end_of_delayOn 0456                         _digit 02AD                         _light 0381  
                       _timer 0433                         pclath 000A                  main@tmr_prev 0045  
      __size_of_incrementTime 001E                         status 0003                         wtemp0 007E  
        ?_ConfigureOscillator 0070                __CFG_MCLRE$OFF 0000               __initialization 000B  
                __end_of_main 0189                        ??_main 003D                        ?_digit 0072  
                      ?_light 0030                        _CCPR1L 0015              ___awdiv@dividend 0074  
                      ?_timer 0070                   light@number 0032                        _TMR1CS 0081  
                      _TMR1ON 0080                        _TRISA1 0429                        _TRISA2 042A  
                      _TRISA4 042C                        _TRISA5 042D                        _TRISB6 0436  
                      _TRISB7 0437                     ??_InitApp 0072         ??_ConfigureOscillator 0072  
            __end_of_delayOff 0450                __CFG_PWRTE$OFF 0000                     ??___aldiv 007A  
                   ??___almod 007B                        ___wmul 03E3                     ??___awdiv 0076  
            ___awdiv@quotient 0079                     ??_delayOn 0072                 _incrementTime 0408  
                      saved_w 007E       __end_of__initialization 001B                __pcstackCOMMON 0070  
                __pidataBANK0 043C                 __end_of_digit 031A                 __end_of_light 03B8  
               __end_of_timer 043C                ?_incrementTime 0072             incrementTime@time 0072  
                     ??_digit 0074                       ??_light 007C                       ??_timer 0072  
                  __pmaintext 00D6                       ?___wmul 0072                    __pintentry 0004  
                     _CCP1CON 0017                       _T1CKPS0 0084                       _T1CKPS1 0085  
                     _T1OSCEN 0083                     ?_delayOff 0070                       _InitApp 03B8  
                     _nT1SYNC 0082                       ___aldiv 0189                       ___almod 0226  
                     ___awdiv 031A               ??_incrementTime 007A               __size_of___wmul 0025  
                     _delayOn 0455                       __ptext1 0433                       __ptext2 001D  
                     __ptext3 0381                       __ptext4 02AD                       __ptext5 0455  
                     __ptext6 044B                       __ptext7 0226                       __ptext8 0189  
                     __ptext9 0426                  __size_of_isr 0007                  __size_of_pwm 000D  
            ___aldiv@dividend 0076                    ??_delayOff 0072          end_of_initialization 001B  
            ___aldiv@quotient 0022                    _showNumber 001D                   showNumber@i 003B  
 __end_of_ConfigureOscillator 0455                __end_of___wmul 0408           start_initialization 000B  
                 __end_of_isr 044B                   __end_of_pwm 0433                      ??___wmul 0076  
                 __pdataBANK0 0051                   ?_showNumber 0034                     ___latbits 0000  
               __pcstackBANK0 0020             __size_of_delayOff 0005                      ?_InitApp 0070  
                    ?___aldiv 0072                      ?___almod 0026                      ?___awdiv 0072  
                    ?_delayOn 0070              ___almod@dividend 002A                __size_of_digit 006D  
              __size_of_light 0037                __size_of_timer 0009               ___aldiv@divisor 0072  
           interrupt_function 0004               ___aldiv@counter 0020                ___wmul@product 0076  
         __size_of_showNumber 00B9         __end_of_incrementTime 0426             ___wmul@multiplier 0072  
                   light@lamp 0030              __size_of_InitApp 002B              __size_of___aldiv 009D  
            __size_of___almod 0087              __size_of___awdiv 0067              __size_of_delayOn 0001  
                    _delayOff 044B                      __ptext10 0408                      __ptext11 03E3  
                    __ptext12 031A                      __ptext13 03B8                      __ptext14 0450  
                    __ptext15 0444               ___almod@divisor 0026               ___almod@counter 002E  
               __size_of_main 00B3  __size_of_ConfigureOscillator 0005                      main@F523 0051  
            showNumber@number 0034                  ??_showNumber 003A                      main@time 0049  
                 digit@number 0072                      intlevel1 0000            __end_of_showNumber 00D6  
                ___aldiv@sign 0021                showNumber@time 0038            __CFG_FOSC$INTOSCIO 0000  
                ___almod@sign 002F  
